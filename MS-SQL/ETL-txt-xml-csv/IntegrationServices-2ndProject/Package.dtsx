<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/11/2021 12:04:41 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-T525H9P"
  DTS:CreatorName="DESKTOP-T525H9P\Kevin"
  DTS:DelayValidation="True"
  DTS:DTSID="{C68A6752-D70D-468F-8A06-5A62BE7F7EE1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.152"
  DTS:LocaleID="5130"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="196"
  DTS:VersionGUID="{712262BD-514E-439F-9A76-810C79033AE5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{9C95B346-6DF2-443A-B692-257C628BF451}"
      DTS:ObjectName="DESKTOP-T525H9P.DB_MS_SQL">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-T525H9P;Initial Catalog=DB_MS_SQL;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{30C62314-EB98-4419-9063-552D0F3731B0}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\EXCEL_000-100.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{18CB2226-115B-4F1E-B644-79E74BA1F792}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\EXCEL_000-100.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sales Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:Description="Sales txt manager"
      DTS:DTSID="{E2C83C56-5EC5-4B5C-A9DF-6E92D7D86E8B}"
      DTS:ObjectName="Sales Flat File Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FileFullPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Factura"
              DTS:DTSID="{A2E96971-691A-47ED-9DC1-A678AA6B1958}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="Fecha"
              DTS:DTSID="{FF77A726-216D-47EE-B534-0BC5D6D141FB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="FechaVencimiento"
              DTS:DTSID="{88027A2A-E5BD-47C4-AB08-C7184ED08B20}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Cliente"
              DTS:DTSID="{60426AE3-DDAC-489B-A030-96BAA18EB4B8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Producto"
              DTS:DTSID="{9AEBD437-723C-4A03-9042-ACB8D5A9B0E9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Cantidad"
              DTS:DTSID="{69135A46-C48A-407C-A393-C5C41D74F062}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="10"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Moneda"
              DTS:DTSID="{BCAABDAF-9374-4C98-BCF3-783B66D74281}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Precio"
              DTS:DTSID="{A417F740-B056-46C2-B5DE-D878B04B58A3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total"
              DTS:DTSID="{CAF92582-61D7-4A63-8218-042008A4DF43}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Almacen"
              DTS:DTSID="{448E8E9E-7A5A-428A-8FC2-D3F9CA86A5FE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Vendedor"
              DTS:DTSID="{8EE43A8E-E0A5-4C14-A1CC-048D7426A61E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TotalUSD"
              DTS:DTSID="{5A5FB266-D23A-4C2B-AF7A-9673D0348225}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Impuesto"
              DTS:DTSID="{3C24B050-44AD-4954-ABB2-D8B78842C27F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Tipo de cambio"
              DTS:DTSID="{F90EF56E-8353-4B1C-A8D4-D75E78168134}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Ganacia"
              DTS:DTSID="{A734690C-9BDD-42ED-9774-DBBB82AFA9A7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="GananciaUSD"
              DTS:DTSID="{98B70170-CD79-4084-A436-DF0FE2C1FCF9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E1B4DDEA-24C9-4B3B-B7F7-23B0D1D6F00C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::InputFolder]+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileFullPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{320B5D8E-4FB3-4770-9081-993E60A7D456}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C68FF6CE-5DC8-4F84-8597-7383FA166D86}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNameExcel">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C655F87-3490-4FAB-97EC-FC379010D407}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNameXML">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FAFD8491-8693-4828-B466-8177A9B5E39C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::InputFolder]+ @[User::FileNameXML]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FillFullPathXML">
      <DTS:VariableValue
        DTS:DataType="8">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC5EDD25-9ABC-4F2B-BAAD-FC31C2ECB138}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::InputFolder] +@[User::FileNameExcel]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullFilePathExcel">
      <DTS:VariableValue
        DTS:DataType="8">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E26246B9-AB88-4D4D-A9A4-E25AB7704D4D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{56DB1783-5B3B-40BE-BDC6-03251F66A72D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadStatusFlag">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{54A230E6-C9AE-4E9F-8099-708D6040364A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\Files-Processed\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{64F10799-821C-44F8-B614-00675FB45E6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RejectedFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\Rejected-Files\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{BA4CFFC7-7B61-46D6-9C14-6C62DE3ECC3B}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="1033"
      DTS:ObjectName="Foreach Loop Container Read Excel Files From Input Folder">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{FB1BB345-13E3-4416-AF36-6CFD735A34BE}"
        DTS:ObjectName="{FB1BB345-13E3-4416-AF36-6CFD735A34BE}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::InputFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Excel File Processed"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="Move processed files"
          DTS:DTSID="{86590530-b9d4-4b56-b464-d34a5b2c8eb8}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Excel File Processed"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::FullFilePathExcel"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ProcessedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Insert Excel File Name into DB SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Insert File Name into DB SQL Task"
          DTS:DTSID="{3f269d06-0f09-41a5-96a2-d19e80222f7c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Excel File Name into DB SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9C95B346-6DF2-443A-B692-257C628BF451}"
              SQLTask:SqlStatementSource="INSERT INTO [DB_MS_SQL].[dbo].[FileLoadStatus] ([FileName]) VALUES (?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileNameExcel"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{AC647F5D-7D33-4B8B-879E-E0ADC3EB67B2}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="1033"
          DTS:ObjectName="Load New Excel File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Columnas derivadas sin comas"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[Cantidad]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cantidad"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[Precio]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Precio"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Precio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[Total]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Total"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Total]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[TotalUSD]"
                          cachedDataType="r8"
                          cachedName="TotalUSD"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[Impuesto]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Impuesto"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[ImpuestoUSD]"
                          cachedDataType="r8"
                          cachedName="ImpuestoUSD"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[Tipo de cambio]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Tipo de cambio"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[Ganacia]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganacia"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input].Columns[GananciaUSD]"
                          cachedDataType="r8"
                          cachedName="GananciaUSD"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Cantidad_sin_comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Cantidad_sin_comas]"
                          name="Cantidad_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]},",","")," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Cantidad,",","")," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Precio_sin_comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Precio_sin_comas]"
                          name="Precio_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Precio]},",","")," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Precio,",","")," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Total_sin_comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Total_sin_comas]"
                          name="Total_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Total]},",","")," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Total,",","")," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TotalUSD_sin_comas]"
                          dataType="r8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TotalUSD_sin_comas]"
                          name="TotalUSD_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TotalUSD</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Impuesto_sin_comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Impuesto_sin_comas]"
                          name="Impuesto_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]},",","")," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Impuesto,",","")," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[ImpuestoUSD_sin_comas]"
                          dataType="r8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[ImpuestoUSD_sin_comas]"
                          name="ImpuestoUSD_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ImpuestoUSD</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TipoCambio_sin_comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TipoCambio_sin_comas]"
                          name="TipoCambio_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]},",","")," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE([Tipo de cambio],",","")," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Ganancia_sin_comas_blank]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Ganancia_sin_comas_blank]"
                          name="Ganancia_sin_comas_blank"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]},",","")," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Ganacia,",","")," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[GananciaUSD_sin_comas]"
                          dataType="r8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[GananciaUSD_sin_comas]"
                          name="GananciaUSD_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GananciaUSD</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion strings y numerics"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Factura]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Factura"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Factura]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Moneda]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Moneda"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Almacén]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Almacén"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Vendedor]"
                          cachedDataType="r8"
                          cachedName="Vendedor"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Cantidad_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cantidad_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Cantidad_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Precio_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Precio_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Precio_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Total_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Total_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Total_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[TotalUSD_sin_comas]"
                          cachedDataType="r8"
                          cachedName="TotalUSD_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TotalUSD_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Impuesto_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Impuesto_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Impuesto_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[ImpuestoUSD_sin_comas]"
                          cachedDataType="r8"
                          cachedName="ImpuestoUSD_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[ImpuestoUSD_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[TipoCambio_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TipoCambio_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TipoCambio_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[GananciaUSD_sin_comas]"
                          cachedDataType="r8"
                          cachedName="GananciaUSD_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[GananciaUSD_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Ganancia_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganancia_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Ganancia_sin_comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Cliente_Formateado]"
                          cachedDataType="wstr"
                          cachedLength="51"
                          cachedName="Cliente_Formateado"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Cliente_Formateado]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input].Columns[Producto_Formateado]"
                          cachedDataType="wstr"
                          cachedLength="51"
                          cachedName="Producto_Formateado"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Producto_Formateado]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Almacén_Str50]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Almacén_Str50]"
                          name="Almacén_Str50"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cantidad_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cantidad_numeric]"
                          name="Cantidad_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Cantidad_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cliente_Final]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cliente_Final]"
                          name="Cliente_Final"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Cliente_Formateado]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Factura_Str50]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Factura_Str50]"
                          name="Factura_Str50"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Factura]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Ganancia_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Ganancia_numeric]"
                          name="Ganancia_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Ganancia_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[GananciaUSD_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[GananciaUSD_numeric]"
                          name="GananciaUSD_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[GananciaUSD_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Impuesto_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Impuesto_numeric]"
                          name="Impuesto_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Impuesto_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[ImpuestoUSD_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[ImpuestoUSD_numeric]"
                          name="ImpuestoUSD_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[ImpuestoUSD_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Moneda_Str50]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Moneda_Str50]"
                          name="Moneda_Str50"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Precio_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Precio_numeric]"
                          name="Precio_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Precio_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Producto_Str50]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Producto_Str50]"
                          name="Producto_Str50"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Producto_Formateado]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[TipoCambio_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[TipoCambio_numeric]"
                          name="TipoCambio_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TipoCambio_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Total_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Total_numeric]"
                          name="Total_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Total_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[TotalUSD_numeric]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[TotalUSD_numeric]"
                          name="TotalUSD_numeric"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[TotalUSD_sin_comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Vendedor_Str50]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Vendedor_Str50]"
                          name="Vendedor_Str50"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  localeId="1033"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'001-100$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Factura]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Factura]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Factura]"
                          name="Factura"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Fecha]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]"
                          name="Fecha"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FechaVencimiento]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]"
                          name="FechaVencimiento"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cliente]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]"
                          name="Cliente"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Producto]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Producto]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Producto]"
                          name="Producto"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cantidad]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cantidad]"
                          name="Cantidad"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Moneda]"
                          name="Moneda"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Precio]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Precio]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Precio]"
                          name="Precio"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Total]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Total]"
                          name="Total"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Almacén]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Almacén]"
                          name="Almacén"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Vendedor]"
                          name="Vendedor"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalUSD]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[TotalUSD]"
                          name="TotalUSD"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Impuesto]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Impuesto]"
                          name="Impuesto"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImpuestoUSD]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[ImpuestoUSD]"
                          name="ImpuestoUSD"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Tipo de cambio]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Tipo de cambio]"
                          name="Tipo de cambio"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ganacia]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Ganacia]"
                          name="Ganacia"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[GananciaUSD]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[GananciaUSD]"
                          name="GananciaUSD"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Factura]"
                          dataType="wstr"
                          length="255"
                          name="Factura" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Fecha]"
                          dataType="wstr"
                          length="255"
                          name="Fecha" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[FechaVencimiento]"
                          dataType="wstr"
                          length="255"
                          name="FechaVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cliente]"
                          dataType="wstr"
                          length="255"
                          name="Cliente" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Producto]"
                          dataType="wstr"
                          length="255"
                          name="Producto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cantidad]"
                          dataType="wstr"
                          length="255"
                          name="Cantidad" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Moneda]"
                          dataType="wstr"
                          length="255"
                          name="Moneda" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Precio]"
                          dataType="wstr"
                          length="255"
                          name="Precio" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total]"
                          dataType="wstr"
                          length="255"
                          name="Total" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Almacén]"
                          dataType="wstr"
                          length="255"
                          name="Almacén" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Vendedor]"
                          dataType="r8"
                          name="Vendedor" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[TotalUSD]"
                          dataType="r8"
                          name="TotalUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Impuesto]"
                          dataType="wstr"
                          length="255"
                          name="Impuesto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImpuestoUSD]"
                          dataType="r8"
                          name="ImpuestoUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Tipo de cambio]"
                          dataType="wstr"
                          length="255"
                          name="Tipo de cambio" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ganacia]"
                          dataType="wstr"
                          length="255"
                          name="Ganacia" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].ExternalColumns[GananciaUSD]"
                          dataType="r8"
                          name="GananciaUSD" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Factura]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Factura]"
                          name="Factura" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Fecha]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Fecha]"
                          name="Fecha" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[FechaVencimiento]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[FechaVencimiento]"
                          name="FechaVencimiento" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Cliente]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Cliente]"
                          name="Cliente" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Producto]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Producto]"
                          name="Producto" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Cantidad]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Cantidad]"
                          name="Cantidad" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Moneda]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Moneda]"
                          name="Moneda" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Precio]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Precio]"
                          name="Precio" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Total]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Total]"
                          name="Total" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Almacén]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Almacén]"
                          name="Almacén" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Vendedor]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Vendedor]"
                          name="Vendedor" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[TotalUSD]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[TotalUSD]"
                          name="TotalUSD" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Impuesto]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Impuesto]"
                          name="Impuesto" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ImpuestoUSD]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ImpuestoUSD]"
                          name="ImpuestoUSD" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Tipo de cambio]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Tipo de cambio]"
                          name="Tipo de cambio" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Ganacia]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[Ganacia]"
                          name="Ganacia" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[GananciaUSD]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[GananciaUSD]"
                          name="GananciaUSD" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Formateo de Str"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input].Columns[Ganancia_sin_comas_blank]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganancia_sin_comas_blank"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Ganancia_sin_comas_blank]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input].Columns[Cliente]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cliente"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input].Columns[Producto]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Producto"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Producto]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Ganancia_sin_comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Ganancia_sin_comas]"
                          name="Ganancia_sin_comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Ganancia_sin_comas_blank]}," ","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(Ganancia_sin_comas_blank," ","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Cliente_Formateado]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="51"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Cliente_Formateado]"
                          name="Cliente_Formateado"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"C" + (DT_STR,50,1252)([RIGHT]([REPLICATE]("0",6) + (DT_WSTR,6)[REPLACE](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Cliente]},"C",""),6))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"C" + (DT_STR,50,1252)(RIGHT(REPLICATE("0",6) + (DT_WSTR,6)REPLACE(Cliente,"C",""),6))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Producto_Formateado]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="51"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Producto_Formateado]"
                          name="Producto_Formateado"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"A" + (DT_STR,50,1252)([RIGHT]([REPLICATE]("0",6) + (DT_WSTR,6)[RIGHT](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Producto]},[LEN](#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Producto]}) - 1),6))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"A" + (DT_STR,50,1252)(RIGHT(REPLICATE("0",6) + (DT_WSTR,6)RIGHT(Producto,LEN(Producto) - 1),6))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[VENTAS_PROGRA2]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,FIRE_TRIGGERS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Fecha]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Fecha"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[Fecha]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FechaVencimiento]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FechaVencimiento"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output].Columns[FechaVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Factura_Str50]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Factura_Str50"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Factura_Str50]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producto_Str50]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Producto_Str50"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Producto_Str50]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cantidad_numeric]"
                          cachedDataType="numeric"
                          cachedName="Cantidad_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cantidad_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Moneda_Str50]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Moneda_Str50"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Moneda_Str50]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Precio_numeric]"
                          cachedDataType="numeric"
                          cachedName="Precio_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Precio_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total_numeric]"
                          cachedDataType="numeric"
                          cachedName="Total_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Total_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Almacén_Str50]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Almacén_Str50"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Almacén_Str50]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Vendedor_Str50]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Vendedor_Str50"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Vendedor_Str50]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalUSD_numeric]"
                          cachedDataType="numeric"
                          cachedName="TotalUSD_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[TotalUSD_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Impuesto_numeric]"
                          cachedDataType="numeric"
                          cachedName="Impuesto_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Impuesto_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ImpuestoUSD_numeric]"
                          cachedDataType="numeric"
                          cachedName="ImpuestoUSD_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImpuestoUSD]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[ImpuestoUSD_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TipoCambio_numeric]"
                          cachedDataType="numeric"
                          cachedName="TipoCambio_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TipoDeCambio]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[TipoCambio_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Ganancia_numeric]"
                          cachedDataType="numeric"
                          cachedName="Ganancia_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Ganancia_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GananciaUSD_numeric]"
                          cachedDataType="numeric"
                          cachedName="GananciaUSD_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[GananciaUSD_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cliente_Final]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Cliente_Final"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cliente_Final]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Factura" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                          dataType="dbDate"
                          name="Fecha" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                          dataType="dbDate"
                          name="FechaVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cliente" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Producto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                          dataType="numeric"
                          name="Cantidad"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Moneda" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                          dataType="numeric"
                          name="Precio"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                          dataType="numeric"
                          name="Total"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Almacen" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Vendedor" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                          dataType="numeric"
                          name="TotalUSD"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                          dataType="numeric"
                          name="Impuesto"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImpuestoUSD]"
                          dataType="numeric"
                          name="ImpuestoUSD"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TipoDeCambio]"
                          dataType="numeric"
                          name="TipoDeCambio"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                          dataType="numeric"
                          name="Ganancia"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                          dataType="numeric"
                          name="GananciaUSD"
                          precision="20"
                          scale="4" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Precio Calculado"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input].Columns[Cantidad_numeric]"
                          cachedDataType="numeric"
                          cachedName="Cantidad_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cantidad_numeric]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input].Columns[Precio_numeric]"
                          cachedDataType="numeric"
                          cachedName="Precio_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Precio_numeric]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Total_numeric]} / #{Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Cantidad_numeric]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">Total_numeric / Cantidad_numeric</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input].Columns[Total_numeric]"
                          cachedDataType="numeric"
                          cachedName="Total_numeric"
                          cachedPrecision="20"
                          cachedScale="4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output].Columns[Total_numeric]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script C# reemplace punto excepto el último"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_308514e4c71e41319e86f7082e225139.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fb85d0a4-ce50-431a-8a12-0365cc513276}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_308514e4c71e41319e86f7082e225139</RootNamespace>
    <AssemblyName>SC_308514e4c71e41319e86f7082e225139</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_308514e4c71e41319e86f7082e225139" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        
        Row.Totalsincomas = ReplaceDotExceptLast(Row.Totalsincomas);
        Row.Gananciasincomas = ReplaceDotExceptLast(Row.Gananciasincomas.Replace(" ", String.Empty));
        
    }

    public string ReplaceDotExceptLast(string value)
    {
        int lastIndex = value.LastIndexOf('.');
        if (lastIndex > 0)
        {
            value = value.Substring(0, lastIndex).Replace(".", "")
                + value.Substring(lastIndex);
        }
        return value;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Totalsincomas
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool Totalsincomas_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Gananciasincomas
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool Gananciasincomas_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_308514e4c71e41319e86f7082e225139.Properties.Settings.get_Default():SC_308514e4c71e41319e86f7082e225139.Properties.Sett" +
    "ings")]

namespace SC_308514e4c71e41319e86f7082e225139.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_308514e4c71e41319e86f7082e225139</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_308514e4c71e41319e86f7082e225139</msb:DisplayName>
    <msb:ProjectId>{D53B52BD-1777-4012-A01F-E81D1BB949AE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_308514e4c71e41319e86f7082e225139.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_308514e4c71e41319e86f7082e225139")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_308514e4c71e41319e86f7082e225139")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_308514e4c71e41319e86f7082e225139.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_308514e4c71e41319e86f7082e225139.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_308514e4c71e41319e86f7082e225139.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_308514e4c71e41319e86f7082e225139.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_308514e4c71e41319e86f7082e225139.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_308514e4c71e41319e86f7082e225139.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKrmEWAAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAsjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGAzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAuBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACU
MwAAAAAAAEgAAAACAAUAUCIAAFgQAAABAAAAAAAAAKgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACirSAwIDbwcAAAYoBAAABm8IAAAG
AwIDbwsAAAZyAQAAcH4SAAAKbxMAAAooBAAABm8MAAAGKgAAABMwAwA0AAAAAQAAEQMfLm8UAAAK
CgYWMSUDFgZvFQAACnIFAABwcgkAAHBvEwAACgMGbxYAAAooFwAAChABAyoeAigRAAAGKioCAwQF
KBgAAAoqUgJ7GQAACgJ7GgAAChaUbxsAAAoqJgIWAygcAAAKKiICFigdAAAKKloDLAgCFigeAAAK
KnILAABwcx8AAAp6UgJ7GQAACgJ7GgAACheUbxsAAAoqJgIXAygcAAAKKiICFygdAAAKKloDLAgC
FygeAAAKKnILAABwcx8AAAp6HgIoIAAACioeAighAAAKKn4CKCIAAAoCAnMVAAAGfQEAAAQCAnMW
AAAGfQIAAAQqkgRyqAAAcBpvIwAACiwVAgUCAygkAAAKDgRzBgAABm8TAAAGKkorBwIDbxQAAAYD
bw8AAAYt8SoGKjoCKCUAAAoCA30DAAAEKjoCKCUAAAoCA30EAAAEKh4CKCUAAAoqrn4FAAAELR5y
uAAAcNAHAAACKCYAAApvJwAACnMoAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQq
HgIoKQAACioucxwAAAaABwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
AAYAACN+AABsBgAA7AYAACNTdHJpbmdzAAAAAFgNAAAsAQAAI1VTAIQOAAAQAAAAI0dVSUQAAACU
DgAAxAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAAB8AAAAIAAAABwAAAB0A
AAASAAAAKQAAABAAAAABAAAAAwAAAAcAAAAMAAAAAQAAAAQAAAABAAAAAAALAwEAAAAAAAYA7AEC
BQYAgAICBQYAOAHvBA8AdgUAAAYAZQH2AwYAzwH2AwYAsAH2AwYAZwL2AwYADAL2AwYAJQL2AwYA
fAH2AwYAlwHHAgoAQAKFAAoAcwSFAA4AZASFAAoAPwSFAAoAQwaFAAYABgauAwYAGwHvBAYAhAQi
BQYAMwThAxIA6wD1AhIATAH1AhIA0wDMAwYAAAECBQYA5AKuAwYACASuAwYAIgSuAwYApgCuAwYA
VwCuAwYA3Qb2AwAAAAAlAAAAAAABAAEAAQAQAMEDAAAQAAEAAQABABAAVwQAADkAAQAGAAEAEAAl
BgAARQABABEAAQAQAPMFAABJAAMAFQABABAAtAUAAEkABAAWAAAAEAApBYUFSQAFABcAAAEQAOMF
hQVhAAcAGwAGAPMFkQAGALQFlQABADMGmQABADMGmQARALUDnQARAMMAoQARAEcApQBQIAAAAADG
AJ4CBgABAFggAAAAAMYAqQIGAAEAYCAAAAAAxgC6BqkAAQCYIAAAAACGAHAGrwACANggAAAAAIYY
lAQGAAMA4CAAAAAAhhiUBD4AAwDrIAAAAACGCMsEtAAGAAAhAAAAAIYI3QQQAAYACiEAAAAAhghr
A1sABwATIQAAAACGCIQDuAAHACohAAAAAIYIoQS0AAgAPyEAAAAAhgi2BBAACABJIQAAAACGCDMD
WwAJAFIhAAAAAIYITwO4AAkAaSEAAAAAhgDRBlsACgBxIQAAAACGAA0GWwAKAHkhAAAAAIYYlAQG
AAoAmSEAAAAAxgCtBr0ACgC+IQAAAADGAaYGqQAOANEhAAAAAMYBugapAA8A0yEAAAAAhhiUBMcA
EADiIQAAAACGGJQExwARAPEhAAAAAIMYlAQGABIA+SEAAAAAkwiABM0AEgAlIgAAAACTCKsA0gAS
ACwiAAAAAJMItwDXABIANCIAAAAAlggZBt0AEwA7IgAAAACGGJQEBgATAEMiAAAAAJEYmgTiABMA
AAABANUGAAABALUCAAABAHkEAAACAL4FAAADAE0EAAABALUCAAABALUCAAABALUCAAABALUCAAAB
AC4AAAACAHsAAAADAHkEAAAEAE0EAAABAHkEAAABANUGAAABAEkGAAABAEkGAAABALUCCQCUBAEA
EQCUBAYAGQCUBAoAKQCUBBAAMQCUBBAAOQCUBBAAQQCUBBAASQCUBBAAUQCUBBAAWQCUBBAAYQCU
BBAAaQCUBAYAmQCUBAYAuQCUBBUAyQCUBAYAiQCeAgYAiQCpAgYA0QDmBhsA0QA/AB4A0QC7AigA
0QDrAi0A0QDrAjMA0QD/BTgAcQCUBD4AcQB5BEgAcQC+BUwAeQDhAjMAcQClA1AAcQCWA1YAcQCd
AwEA2QCUBBAAcQDRBlsAcQANBlsAiQCUBAYA0QDsBV8AiQDSBWYAkQCUBAYA6QBpAGwA6QDZBnMA
oQCUBHgAwQCUBAYALgALAP0ALgATAAYBLgAbACUBLgAjAC4BLgArAFcBLgAzAFcBLgA7AFcBLgBD
AC4BLgBLAF0BLgBTAFcBLgBbAHQBQwBjAL4BqQBzACUByQBzACUB4QB7AL4B4wBrAL4BJAADAAEA
BwAFAAgABwAAAOEE5gAAAIgD6gAAALoE5gAAAFMD6gAAAIQE7gAAAMsA8wAAAB0G+AACAAcAAwAB
AAgAAwACAAkABQABAAoABQACAAsABwABAAwABwACAA0ACQABAA4ACQACABgACwACABkADQABABoA
DQACABsADwAEgAAAAQAAAAAAAAAAAAAAAAABAAAABAAAAAAAAAAAAAAAfwA2AAAAAAAPAAAAAAAA
AAAAAACIAFMGAAAAAA8AAAAAAAAAAAAAAIgAhQYAAAAABAAAAAAAAAAAAAAAfwCuAwAAAAAAAAAA
AQAAADMFAAAAAAAAAFNDXzMwODUxNGU0YzcxZTQxMzE5ZTg2ZjcwODJlMjI1MTM5ADxNb2R1bGU+
AElucHV0SUQAbXNjb3JsaWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFBy
ZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUATGFzdEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18zMDg1
MTRlNGM3MWU0MTMxOWU4NmY3MDgyZTIyNTEzOS5kbGwAZ2V0X0dhbmFuY2lhc2luY29tYXNfSXNO
dWxsAHNldF9HYW5hbmNpYXNpbmNvbWFzX0lzTnVsbABnZXRfVG90YWxzaW5jb21hc19Jc051bGwA
c2V0X1RvdGFsc2luY29tYXNfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNl
TWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJp
c29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IA
Z2V0X0dhbmFuY2lhc2luY29tYXMAc2V0X0dhbmFuY2lhc2luY29tYXMAZ2V0X1RvdGFsc2luY29t
YXMAc2V0X1RvdGFsc2luY29tYXMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18zMDg1MTRlNGM3MWU0MTMxOWU4NmY3
MDgyZTIyNTEzOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U0NfMzA4NTE0ZTRjNzFlNDEzMTllODZmNzA4MmUyMjUxMzkuUHJvcGVydGllcwBWYXJpYWJsZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25u
ZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AFJlcGxhY2VEb3RFeGNlcHRMYXN0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVI
b3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdl
dF9Bc3NlbWJseQBFbXB0eQAAAyAAAAMuAAABAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0
AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMA
cwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBu
AHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADMAMAA4ADUAMQA0AGUANABjADcA
MQBlADQAMQAzADEAOQBlADgANgBmADcAMAA4ADIAZQAyADIANQAxADMAOQAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABva8e4pBucSp5Gw99Mq4cmAAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFZAgYOBSACDg4OAwcBCAQgAQgDBSACDggIBCABDggFAAIODg4JIAMB
Ej0dCBJBAwYSPQMGHQgFIAIBCBwEIAECCAMgAAIGIAICDhFxBSABHQgIBgABEnUReQQgABJ9BiAC
AQ4SfQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQ4O
AyAADgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygA
AgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU0NfMzA4NTE0ZTRjNzFlNDEzMTllODZmNzA4MmUyMjUxMzkAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
iDMAAAAAAAAAAAAAojMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQzAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAzADAAOAA1ADEANABlADQAYwA3ADEAZQA0ADEAMwAxADkAZQA4ADYAZgA3ADAAOAAy
AGUAMgAyADUAMQAzADkAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMAMAA4ADUAMQA0
AGUANABjADcAMQBlADQAMQAzADEAOQBlADgANgBmADcAMAA4ADIAZQAyADIANQAxADMAOQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwAw
ADgANQAxADQAZQA0AGMANwAxAGUANAAxADMAMQA5AGUAOAA2AGYANwAwADgAMgBlADIAMgA1ADEA
MwA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADMAMAA4
ADUAMQA0AGUANABjADcAMQBlADQAMQAzADEAOQBlADgANgBmADcAMAA4ADIAZQAyADIANQAxADMA
OQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAtDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_308514e4c71e41319e86f7082e225139</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">3F</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Total_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Total_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output].Columns[Total_sin_comas]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Ganancia_sin_comas]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganancia_sin_comas"
                          lineageId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output].Columns[Ganancia_sin_comas]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Output 0]"
                  endId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics.Inputs[Data Conversion Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder\Rejected File File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{5c43cc12-5800-4bb1-a8cd-f78c299a35a6}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Rejected File File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::FileNameExcel"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::RejectedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder\SQL_CHECK_EXCEL_FILE_LOADED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{dea97534-6973-468d-bd0d-80598ae98dc8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL_CHECK_EXCEL_FILE_LOADED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"
DECLARE @FileName VARCHAR(100)
SET @FileName = ' "+ @[User::FileName]+" '
IF EXISTS (	SELECT 1
			FROM [dbo].[FileLoadStatus]
			WHERE [FileName] = @FileName)
	BEGIN
		SELECT 1 AS FileExistsFlag
	END
ELSE
	BEGIN
		SELECT 0 AS FileExistsFlag
	END
"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9C95B346-6DF2-443A-B692-257C628BF451}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @FileName VARCHAR(100)&#xA;SET @FileName = '  '&#xA;IF EXISTS (&#x9;SELECT 1&#xA;&#x9;&#x9;&#x9;FROM [dbo].[FileLoadStatus]&#xA;&#x9;&#x9;&#x9;WHERE [FileName] = @FileName)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT 1 AS FileExistsFlag&#xA;&#x9;END&#xA;ELSE&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT 0 AS FileExistsFlag&#xA;&#x9;END&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::LoadStatusFlag" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileNameExcel"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{ECECDBCB-1E85-40BB-9F8E-D90B4AF3C4A7}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::LoadStatusFlag] == 0"
          DTS:From="Package\Foreach Loop Container Read Excel Files From Input Folder\SQL_CHECK_EXCEL_FILE_LOADED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{E61CBB51-B7D3-49BB-8E9C-497C70192D00}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::LoadStatusFlag] == 1"
          DTS:From="Package\Foreach Loop Container Read Excel Files From Input Folder\SQL_CHECK_EXCEL_FILE_LOADED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container Read Excel Files From Input Folder\Rejected File File System Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{971D261A-0921-4EB4-B5CC-E51D3A46BF0B}"
          DTS:From="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container Read Excel Files From Input Folder\Excel File Processed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{B838CF07-CD3A-4A2F-8CFF-D16C6B87B5F4}"
          DTS:From="Package\Foreach Loop Container Read Excel Files From Input Folder\Excel File Processed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container Read Excel Files From Input Folder\Insert Excel File Name into DB SQL Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C3F5F0DA-32B8-4041-8BF8-5E580DD86782}"
          DTS:ObjectName="{C3F5F0DA-32B8-4041-8BF8-5E580DD86782}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileNameExcel" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{50D41776-93F5-4129-8CD2-267EB6616954}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="1033"
      DTS:ObjectName="Foreach Loop Container Read Flat Files from Input Folder">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{9799FC15-0089-4C4E-BF36-5905388B332D}"
        DTS:ObjectName="{9799FC15-0089-4C4E-BF36-5905388B332D}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::InputFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files\" />
            <FEFEProperty
              FileSpec="*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{1A8DE05C-9A67-41A2-A64A-85B3F40439D6}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="LoadStatusFlag">
          <DTS:VariableValue
            DTS:DataType="2">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Flat File Processed"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="Move processed files"
          DTS:DTSID="{F1802F15-9FBF-4B4E-8727-F71D062899E7}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Flat File Processed"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::FileFullPath"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ProcessedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Insert File Name into DB SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Insert File Name into DB SQL Task"
          DTS:DTSID="{48F418DF-2606-42D9-AE54-D0664D6F8FBF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert File Name into DB SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9C95B346-6DF2-443A-B692-257C628BF451}"
              SQLTask:SqlStatementSource="INSERT INTO [DB_MS_SQL].[dbo].[FileLoadStatus] ([FileName]) VALUES (?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5926DA9C-0340-4622-9B7B-22852257CF46}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="1033"
          DTS:ObjectName="Load New Flat File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Columna Derivada para el Precio"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Inputs[Derived Column Input].Columns[Copy of Total_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of Total_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Total_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Inputs[Derived Column Input].Columns[Copy of Cantidad_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of Cantidad_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Cantidad_Sin_Coma]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output].Columns[Precio_Calculado]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output].Columns[Precio_Calculado]"
                          name="Precio_Calculado"
                          precision="38"
                          scale="18"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Total_Sin_Coma]} / #{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Cantidad_Sin_Coma]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[Copy of Total_Sin_Coma] / [Copy of Cantidad_Sin_Coma]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Columnas Derivadas Formateo de numeros sin coma"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Total]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Total"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Total]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Cantidad]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Cantidad"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cantidad]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[TotalUSD]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="TotalUSD"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[TotalUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Impuesto]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Impuesto"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Impuesto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Ganacia]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Ganacia"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Ganacia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[GananciaUSD]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="GananciaUSD"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[GananciaUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Tipo de cambio]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Tipo de cambio"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Tipo de cambio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Cliente]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Cliente"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cliente]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input].Columns[Producto]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Producto"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Producto]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"A" + (DT_STR,50,1252)([RIGHT]([REPLICATE]("0",6) + (DT_WSTR,6)[REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Producto]},"A",""),6))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"A" + (DT_STR,50,1252)(RIGHT(REPLICATE("0",6) + (DT_WSTR,6)REPLACE(Producto,"A",""),6))</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Total_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Total_Sin_Coma]"
                          name="Total_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Total]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Total,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cantidad_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cantidad_Sin_Coma]"
                          name="Cantidad_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cantidad]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Cantidad,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TotalUSD_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TotalUSD_Sin_Coma]"
                          name="TotalUSD_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[TotalUSD]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(TotalUSD,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Impuesto_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Impuesto_Sin_Coma]"
                          name="Impuesto_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Impuesto]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Impuesto,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Ganancia_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Ganancia_Sin_Coma]"
                          name="Ganancia_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Ganacia]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Ganacia,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[GananciaUSD_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[GananciaUSD_Sin_Coma]"
                          name="GananciaUSD_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[GananciaUSD]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(GananciaUSD,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[ImpuestoUSD]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[ImpuestoUSD]"
                          name="ImpuestoUSD"
                          precision="5"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0.0000</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0.0000</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TipoDeCambio_Sin_Coma]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="IgnoreFailure"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TipoDeCambio_Sin_Coma]"
                          name="TipoDeCambio_Sin_Coma"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Tipo de cambio]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE([Tipo de cambio],",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cliente_Sin_C]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="51"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cliente_Sin_C]"
                          name="Cliente_Sin_C"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"C" + (DT_STR,50,1252)([RIGHT]([REPLICATE]("0",6) + (DT_WSTR,6)[REPLACE](#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cliente]},"C",""),6))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"C" + (DT_STR,50,1252)(RIGHT(REPLICATE("0",6) + (DT_WSTR,6)REPLACE(Cliente,"C",""),6))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Conversion Columnas Derivadas sin coma a NUMERIC"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[Total_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Total_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Total_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[Cantidad_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cantidad_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cantidad_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[TotalUSD_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TotalUSD_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TotalUSD_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[Impuesto_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Impuesto_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Impuesto_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[ImpuestoUSD]"
                          cachedDataType="numeric"
                          cachedName="ImpuestoUSD"
                          cachedPrecision="5"
                          cachedScale="4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[ImpuestoUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[TipoDeCambio_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TipoDeCambio_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TipoDeCambio_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[Ganancia_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganancia_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Ganancia_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input].Columns[GananciaUSD_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="GananciaUSD_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[GananciaUSD_Sin_Coma]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Cantidad_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Cantidad_Sin_Coma]"
                          name="Copy of Cantidad_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cantidad_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Total_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Total_Sin_Coma]"
                          name="Copy of Total_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Total_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of TotalUSD_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of TotalUSD_Sin_Coma]"
                          name="Copy of TotalUSD_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TotalUSD_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Impuesto_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Impuesto_Sin_Coma]"
                          name="Copy of Impuesto_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Impuesto_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of ImpuestoUSD]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of ImpuestoUSD]"
                          name="Copy of ImpuestoUSD"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[ImpuestoUSD]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of TipoDeCambio_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of TipoDeCambio_Sin_Coma]"
                          name="Copy of TipoDeCambio_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TipoDeCambio_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Ganancia_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Ganancia_Sin_Coma]"
                          name="Copy of Ganancia_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Ganancia_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of GananciaUSD_Sin_Coma]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of GananciaUSD_Sin_Coma]"
                          name="Copy of GananciaUSD_Sin_Coma"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[GananciaUSD_Sin_Coma]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Conversión de Precio derivado"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Inputs[Data Conversion Input].Columns[Precio_Calculado]"
                          cachedDataType="numeric"
                          cachedName="Precio_Calculado"
                          cachedPrecision="38"
                          cachedScale="18"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output].Columns[Precio_Calculado]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Inputs[Data Conversion Input].Columns[Cliente_Sin_C]"
                          cachedDataType="wstr"
                          cachedLength="51"
                          cachedName="Cliente_Sin_C"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cliente_Sin_C]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output].Columns[Copy of Precio_Calculado]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output].Columns[Copy of Precio_Calculado]"
                          name="Copy of Precio_Calculado"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output].Columns[Precio_Calculado]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output].Columns[Cliente_Con_C00]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output].Columns[Cliente_Con_C00]"
                          name="Cliente_Con_C00"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cliente_Sin_C]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source txt"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Sales Flat File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Sales Flat File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Factura]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Factura]"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Factura]"
                          name="Factura"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Fecha]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Fecha]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Fecha]"
                          name="Fecha"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[FechaVencimiento]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[FechaVencimiento]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[FechaVencimiento]"
                          name="FechaVencimiento"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cliente]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Cliente]"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cliente]"
                          name="Cliente"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Producto]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Producto]"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Producto]"
                          name="Producto"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Moneda]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Moneda]"
                          length="10"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Moneda]"
                          name="Moneda"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Vendedor]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Vendedor]"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Vendedor]"
                          name="Vendedor"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Almacen]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Almacen]"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Almacen]"
                          name="Almacen"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Tipo de cambio]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Tipo de cambio]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Tipo de cambio]"
                          name="Tipo de cambio"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cantidad]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Cantidad]"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Cantidad]"
                          name="Cantidad"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Total]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Total]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Total]"
                          name="Total"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[TotalUSD]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[TotalUSD]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[TotalUSD]"
                          name="TotalUSD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Impuesto]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Impuesto]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Impuesto]"
                          name="Impuesto"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Ganacia]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Ganacia]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Ganacia]"
                          name="Ganacia"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[GananciaUSD]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[GananciaUSD]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[GananciaUSD]"
                          name="GananciaUSD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Factura]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Factura" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Fecha]"
                          dataType="date"
                          name="Fecha" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[FechaVencimiento]"
                          dataType="date"
                          name="FechaVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Cliente]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cliente" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Producto]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Producto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Cantidad]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cantidad" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Moneda]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Moneda" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Precio]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Precio" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Total]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Total" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Vendedor]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Vendedor" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[TotalUSD]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="TotalUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Impuesto]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Impuesto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Tipo de cambio]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Tipo de cambio" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Ganacia]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Ganacia" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[GananciaUSD]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="GananciaUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].ExternalColumns[Almacen]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Almacen" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[VENTAS_PROGRA2]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,FIRE_TRIGGERS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Factura]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Factura"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Factura]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Fecha]"
                          cachedDataType="date"
                          cachedName="Fecha"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Fecha]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FechaVencimiento]"
                          cachedDataType="date"
                          cachedName="FechaVencimiento"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[FechaVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Producto]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Producto"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Producto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Moneda]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Moneda"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Moneda]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Almacen]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Almacen"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Almacen]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Cantidad_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of Cantidad_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Cantidad_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Precio_Calculado]"
                          cachedDataType="numeric"
                          cachedName="Precio_Calculado"
                          cachedPrecision="38"
                          cachedScale="18"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output].Columns[Precio_Calculado]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Total_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of Total_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Total_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Vendedor]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Vendedor"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output].Columns[Vendedor]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of TotalUSD_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of TotalUSD_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of TotalUSD_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of ImpuestoUSD]"
                          cachedDataType="numeric"
                          cachedName="Copy of ImpuestoUSD"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImpuestoUSD]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of ImpuestoUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Impuesto_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of Impuesto_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Impuesto_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of TipoDeCambio_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of TipoDeCambio_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TipoDeCambio]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of TipoDeCambio_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Ganancia_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of Ganancia_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of Ganancia_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of GananciaUSD_Sin_Coma]"
                          cachedDataType="numeric"
                          cachedName="Copy of GananciaUSD_Sin_Coma"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output].Columns[Copy of GananciaUSD_Sin_Coma]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cliente_Con_C00]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Cliente_Con_C00"
                          externalMetadataColumnId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output].Columns[Cliente_Con_C00]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Factura" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                          dataType="dbDate"
                          name="Fecha" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                          dataType="dbDate"
                          name="FechaVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cliente" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Producto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                          dataType="numeric"
                          name="Cantidad"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Moneda" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                          dataType="numeric"
                          name="Precio"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                          dataType="numeric"
                          name="Total"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Almacen" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Vendedor" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                          dataType="numeric"
                          name="TotalUSD"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                          dataType="numeric"
                          name="Impuesto"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImpuestoUSD]"
                          dataType="numeric"
                          name="ImpuestoUSD"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TipoDeCambio]"
                          dataType="numeric"
                          name="TipoDeCambio"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                          dataType="numeric"
                          name="Ganancia"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                          dataType="numeric"
                          name="GananciaUSD"
                          precision="20"
                          scale="4" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script C# reemplace punto excepto el último"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        Row.TotalSinComa = ReplaceDotExceptLast(Row.TotalSinComa);
        Row.CantidadSinComa = ReplaceDotExceptLast(Row.CantidadSinComa);
        Row.TotalUSDSinComa = ReplaceDotExceptLast(Row.TotalUSDSinComa);
        Row.ImpuestoSinComa = ReplaceDotExceptLast(Row.ImpuestoSinComa);
        Row.GananciaSinComa = ReplaceDotExceptLast(Row.GananciaSinComa);
        Row.GananciaUSDSinComa = ReplaceDotExceptLast(Row.GananciaUSDSinComa);
        Row.TipoDeCambioSinComa = ReplaceDotExceptLast(Row.TipoDeCambioSinComa);


    }

    public string ReplaceDotExceptLast(string value)
    {
        int lastIndex = value.LastIndexOf('.');
        if (lastIndex > 0)
        {
            value = value.Substring(0, lastIndex).Replace(".", "")
                + value.Substring(lastIndex);
        }
        return value;
    }


}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String GananciaSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool GananciaSinComa_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TotalSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool TotalSinComa_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CantidadSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool CantidadSinComa_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TotalUSDSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool TotalUSDSinComa_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ImpuestoSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool ImpuestoSinComa_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GananciaUSDSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool GananciaUSDSinComa_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TipoDeCambioSinComa
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool TipoDeCambioSinComa_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45125fd6224b49dc89ce24f2d33941f5.Properties.Settings.get_Default():SC_45125fd6224b49dc89ce24f2d33941f5.Properties.Sett" +
    "ings")]

namespace SC_45125fd6224b49dc89ce24f2d33941f5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_45125fd6224b49dc89ce24f2d33941f5</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_45125fd6224b49dc89ce24f2d33941f5</msb:DisplayName>
    <msb:ProjectId>{757A6A65-B417-4C0D-B942-5272AFB0E893}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_45125fd6224b49dc89ce24f2d33941f5.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_45125fd6224b49dc89ce24f2d33941f5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_45125fd6224b49dc89ce24f2d33941f5")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_45125fd6224b49dc89ce24f2d33941f5.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{02759540-3d60-4d08-8833-075665eed30b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_45125fd6224b49dc89ce24f2d33941f5</RootNamespace>
    <AssemblyName>SC_45125fd6224b49dc89ce24f2d33941f5</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_45125fd6224b49dc89ce24f2d33941f5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45125fd6224b49dc89ce24f2d33941f5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45125fd6224b49dc89ce24f2d33941f5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45125fd6224b49dc89ce24f2d33941f5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_45125fd6224b49dc89ce24f2d33941f5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_45125fd6224b49dc89ce24f2d33941f5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_45125fd6224b49dc89ce24f2d33941f5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAxmD2AAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAHjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw4AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
OQAAAAAAAEgAAAACAAUA4CMAADQUAAABAAAAAAAAABQ4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAfwAAAAAAAAADAgNvCwAA
BigEAAAGbwwAAAYDAgNvDwAABigEAAAGbxAAAAYDAgNvEwAABigEAAAGbxQAAAYDAgNvFwAABigE
AAAGbxgAAAYDAgNvBwAABigEAAAGbwgAAAYDAgNvGwAABigEAAAGbxwAAAYDAgNvHwAABigEAAAG
byAAAAYqABMwAwA0AAAAAQAAEQMfLm8SAAAKCgYWMSUDFgZvEwAACnIBAABwcgUAAHBvFAAACgMG
bxUAAAooFgAAChABAyoeAiglAAAGKioCAwQFKBcAAAoqUgJ7GAAACgJ7GQAAChaUbxoAAAoqJgIW
AygbAAAKKiICFigcAAAKKloDLAgCFigdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAACheUbxoA
AAoqJgIXAygbAAAKKiICFygcAAAKKloDLAgCFygdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAA
ChiUbxoAAAoqJgIYAygbAAAKKiICGCgcAAAKKloDLAgCGCgdAAAKKnIHAABwcx4AAAp6UgJ7GAAA
CgJ7GQAAChmUbxoAAAoqJgIZAygbAAAKKiICGSgcAAAKKloDLAgCGSgdAAAKKnIHAABwcx4AAAp6
UgJ7GAAACgJ7GQAAChqUbxoAAAoqJgIaAygbAAAKKiICGigcAAAKKloDLAgCGigdAAAKKnIHAABw
cx4AAAp6UgJ7GAAACgJ7GQAAChuUbxoAAAoqJgIbAygbAAAKKiICGygcAAAKKloDLAgCGygdAAAK
KnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAAChyUbxoAAAoqJgIcAygbAAAKKiICHCgcAAAKKloDLAgC
HCgdAAAKKnIHAABwcx4AAAp6HgIoHwAACioeAiggAAAKKn4CKCEAAAoCAnMpAAAGfQEAAAQCAnMq
AAAGfQIAAAQqkgRypAAAcBpvIgAACiwVAgUCAygjAAAKDgRzBgAABm8nAAAGKkorBwIDbygAAAYD
byMAAAYt8SoGKjoCKCQAAAoCA30DAAAEKjoCKCQAAAoCA30EAAAEKh4CKCQAAAoqrn4FAAAELR5y
tAAAcNAHAAACKCUAAApvJgAACnMnAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQq
HgIoKAAACiouczAAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
AAAIAAAjfgAAbAgAANAIAAAjU3RyaW5ncwAAAAA8EQAAKAEAACNVUwBkEgAAEAAAACNHVUlEAAAA
dBIAAMABAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAfAAAACAAAAAcAAAAx
AAAAHAAAACgAAAAQAAAAAQAAAAMAAAARAAAAIAAAAAEAAAAEAAAAAQAAAAAAKwQBAAAAAAAGAAwD
7AYGAKAD7AYGAFgC2QYPAGAHAAAGAIUCLgYGAO8CLgYGANACLgYGAIcDLgYGACwDLgYGAEUDLgYG
AJwCLgYGALcC5wMKAGADpQEKAKsGpQEOAJwGpQEKAHcGpQEKAC0IpQEGAPAH5gUGADsC2QYGALwG
DAcGAGsGGQYSAAsCFQQSAGwCFQQSAPMBBAYGACAC7AYGAAQE5gUGAEAG5gUGAFoG5gUGAMYB5gUG
AHcB5gUGAMcILgYAAAAAJQAAAAAAAQABAAEAEAD5BQAAEAABAAEAAQAQAI8GAAA5AAEABgABABAA
DwgAAEUAAQAlAAEAEADdBwAASQADACkAAQAQAJ4HAABJAAQAKgAAABAAEwdvB0kABQArAAABEADN
B28HYQAHAC8ABgDdB44ABgCeB5IAAQAdCJYAAQAdCJYAEQDtBZoAEQDjAZ4AEQBnAaIAUCAAAAAA
xgC+AwYAAQBYIAAAAADGAMkDBgABAGAgAAAAAMYApAimAAEA7CAAAAAAhgBaCKwAAgAsIQAAAACG
GMwGBgADADQhAAAAAIYYzAY7AAMAPyEAAAAAhgiMALEABgBUIQAAAACGCKAAEAAGAF4hAAAAAIYI
xQRYAAcAZyEAAAAAhgjgBLUABwB+IQAAAACGCNwAsQAIAJMhAAAAAIYI7QAQAAgAnSEAAAAAhggx
BVgACQCmIQAAAACGCEkFtQAJAL0hAAAAAIYItACxAAoA0iEAAAAAhgjIABAACgDcIQAAAACGCPsE
WAALAOUhAAAAAIYIFgW1AAsA/CEAAAAAhghkALEADAARIgAAAACGCHgAEAAMABsiAAAAAIYIjwRY
AA0AJCIAAAAAhgiqBLUADQA7IgAAAACGCC4BsQAOAFAiAAAAAIYIQgEQAA4AWiIAAAAAhgifBVgA
DwBjIgAAAACGCLoFtQAPAHoiAAAAAIYINgCxABAAjyIAAAAAhghNABAAEACZIgAAAACGCFMEWAAR
AKIiAAAAAIYIcQS1ABEAuSIAAAAAhgj+ALEAEgDOIgAAAACGCBYBEAASANgiAAAAAIYIYQVYABMA
4SIAAAAAhgiABbUAEwD4IgAAAACGALsIWAAUAAAjAAAAAIYA9wdYABQACCMAAAAAhhjMBgYAFAAo
IwAAAADGAJcIugAUAE0jAAAAAMYBkAimABgAYCMAAAAAxgGkCKYAGQBiIwAAAACGGMwGxAAaAHEj
AAAAAIYYzAbEABsAgCMAAAAAgxjMBgYAHACIIwAAAACTCLgGygAcALQjAAAAAJMIywHPABwAuyMA
AAAAkwjXAdQAHADDIwAAAACWCAMI2gAdAMojAAAAAIYYzAYGAB0A0iMAAAAAkRjSBt8AHQAAAAEA
vwgAAAEA1QMAAAEAsQYAAAIAqAcAAAMAhQYAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMA
AAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA1QMAAAEA
LgAAAAIAmwEAAAMAsQYAAAQAhQYAAAEAsQYAAAEAvwgAAAEAMwgAAAEAMwgAAAEA1QMJAMwGAQAR
AMwGBgAZAMwGCgApAMwGEAAxAMwGEAA5AMwGEABBAMwGEABJAMwGEABRAMwGEABZAMwGEABhAMwG
EABpAMwGBgCZAMwGBgC5AMwGFQDJAMwGBgCJAL4DBgCJAMkDBgDRANsDHwDRAAsEJADRAF8BKgDR
AAsEMADRAOkHNQBxAMwGOwBxALEGRQBxAKgHSQB5AAEEMABxAN0FTQBxAM4FUwBxANUFAQDZAMwG
EABxALsIWABxAPcHWACJAMwGBgDRANYHXACJALwHYwCRAMwGBgDpAIkBaQDpAMMIcAChAMwGdQDB
AMwGBgAuAAsA+gAuABMAAwEuABsAIgEuACMAKwEuACsAVAEuADMAVAEuADsAVAEuAEMAKwEuAEsA
WgEuAFMAVAEuAFsAcQFDAGMAuwHhAHsAuwHjAGsAuwHpAXMAIgEJAnMAIgEbAAMAAQAHAA8ACAAR
AAAApADjAAAA5ATnAAAA8QDjAAAATQXnAAAAzADjAAAAGgXnAAAAfADjAAAArgTnAAAARgHjAAAA
vgXnAAAAUQDjAAAAdQTnAAAAGgHjAAAAhAXnAAAAvAbrAAAA6wHwAAAABwj1AAIABwADAAEACAAD
AAIACQAFAAEACgAFAAIACwAHAAEADAAHAAIADQAJAAEADgAJAAIADwALAAEAEAALAAIAEQANAAEA
EgANAAIAEwAPAAEAFAAPAAIAFQARAAEAFgARAAIAFwATAAEAGAATAAIAGQAVAAEAGgAVAAIAGwAX
AAEAHAAXAAIAHQAZAAEAHgAZAAIAHwAbAAEAIAAbAAIAIQAdAAEAIgAdAAIALAAfAAIALQAhAAEA
LgAhAAIALwAjAASAAAABAAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAAB8AFYBAAAAAA8AAAAA
AAAAAAAAAIUAPQgAAAAADwAAAAAAAAAAAAAAhQBvCAAAAAAEAAAAAAAAAAAAAAB8AOYFAAAAAAAA
AAABAAAAHQcAAAAAAFNDXzQ1MTI1ZmQ2MjI0YjQ5ZGM4OWNlMjRmMmQzMzk0MWY1ADxNb2R1bGU+
AElucHV0SUQAZ2V0X0dhbmFuY2lhVVNEU2luQ29tYQBzZXRfR2FuYW5jaWFVU0RTaW5Db21hAGdl
dF9Ub3RhbFVTRFNpbkNvbWEAc2V0X1RvdGFsVVNEU2luQ29tYQBnZXRfR2FuYW5jaWFTaW5Db21h
AHNldF9HYW5hbmNpYVNpbkNvbWEAZ2V0X0NhbnRpZGFkU2luQ29tYQBzZXRfQ2FudGlkYWRTaW5D
b21hAGdldF9Ub3RhbFNpbkNvbWEAc2V0X1RvdGFsU2luQ29tYQBnZXRfVGlwb0RlQ2FtYmlvU2lu
Q29tYQBzZXRfVGlwb0RlQ2FtYmlvU2luQ29tYQBnZXRfSW1wdWVzdG9TaW5Db21hAHNldF9JbXB1
ZXN0b1NpbkNvbWEAbXNjb3JsaWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUATGFzdEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ180
NTEyNWZkNjIyNGI0OWRjODljZTI0ZjJkMzM5NDFmNS5kbGwAZ2V0X0dhbmFuY2lhVVNEU2luQ29t
YV9Jc051bGwAc2V0X0dhbmFuY2lhVVNEU2luQ29tYV9Jc051bGwAZ2V0X1RvdGFsVVNEU2luQ29t
YV9Jc051bGwAc2V0X1RvdGFsVVNEU2luQ29tYV9Jc051bGwAZ2V0X0dhbmFuY2lhU2luQ29tYV9J
c051bGwAc2V0X0dhbmFuY2lhU2luQ29tYV9Jc051bGwAZ2V0X0NhbnRpZGFkU2luQ29tYV9Jc051
bGwAc2V0X0NhbnRpZGFkU2luQ29tYV9Jc051bGwAZ2V0X1RvdGFsU2luQ29tYV9Jc051bGwAc2V0
X1RvdGFsU2luQ29tYV9Jc051bGwAZ2V0X1RpcG9EZUNhbWJpb1NpbkNvbWFfSXNOdWxsAHNldF9U
aXBvRGVDYW1iaW9TaW5Db21hX0lzTnVsbABnZXRfSW1wdWVzdG9TaW5Db21hX0lzTnVsbABzZXRf
SW1wdWVzdG9TaW5Db21hX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNv
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxp
bmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU0NfNDUxMjVmZDYyMjRiNDlkYzg5Y2UyNGYyZDMzOTQxZjUuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzQ1MTI1ZmQ2MjI0YjQ5ZGM4OWNl
MjRmMmQzMzk0MWY1LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABF
bmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABSZXBsYWNlRG90RXhjZXB0
TGFzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0
AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAMuAAABAICbSQBz
AE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAA
dABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0
AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMA
QwBfADQANQAxADIANQBmAGQANgAyADIANABiADQAOQBkAGMAOAA5AGMAZQAyADQAZgAyAGQAMwAz
ADkANAAxAGYANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAACA
jfdEI1AARoL+MluO5uf5AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAwcBCAQgAQgDBSACDggI
BSACDg4OBCABDggFAAIODg4JIAMBEj0dCBJBAwYSPQMGHQgFIAIBCBwEIAECCAMgAAIGIAICDhFx
BSABHQgIBgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMG
ElEDBhJVAwYSIAUgAQESDAQgAQ4OAyAADgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUF
AAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNDUxMjVmZDYyMjRiNDlkYzg5Y2Uy
NGYyZDMzOTQxZjUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAD0OAAAAAAAAAAAAAAOOQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAADkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA0ADUAMQAyADUAZgBkADYAMgAyADQAYgA0ADkAZABjADgAOQBjAGUAMgA0AGYAMgBkADMA
MwA5ADQAMQBmADUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQANQAxADIANQBmAGQA
NgAyADIANABiADQAOQBkAGMAOAA5AGMAZQAyADQAZgAyAGQAMwAzADkANAAxAGYANQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANAA1ADEA
MgA1AGYAZAA2ADIAMgA0AGIANAA5AGQAYwA4ADkAYwBlADIANABmADIAZAAzADMAOQA0ADEAZgA1
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQANQAxADIA
NQBmAGQANgAyADIANABiADQAOQBkAGMAOAA5AGMAZQAyADQAZgAyAGQAMwAzADkANAAxAGYANQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAIDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_45125fd6224b49dc89ce24f2d33941f5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">F4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Ganancia_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganancia_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Ganancia_Sin_Coma]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Total_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Total_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Total_Sin_Coma]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Cantidad_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cantidad_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Cantidad_Sin_Coma]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[TotalUSD_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TotalUSD_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TotalUSD_Sin_Coma]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Impuesto_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Impuesto_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[Impuesto_Sin_Coma]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[GananciaUSD_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="GananciaUSD_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[GananciaUSD_Sin_Coma]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[TipoDeCambio_Sin_Coma]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TipoDeCambio_Sin_Coma"
                          lineageId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output].Columns[TipoDeCambio_Sin_Coma]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Data Conversion Output1]"
                  endId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Output 0]"
                  endId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC.Inputs[Data Conversion Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder\Rejected File File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{147548A1-1BBD-4676-9914-300F48B224C9}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Rejected File File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::FileFullPath"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::RejectedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder\SQL_CHECK_FLAT_FILE_LOADED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B4F26F19-76C1-425D-A158-DA83E8D3A676}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL_CHECK_FLAT_FILE_LOADED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"
DECLARE @FileName VARCHAR(100)
SET @FileName = ' "+ @[User::FileName]+" '
IF EXISTS (	SELECT 1
			FROM [dbo].[FileLoadStatus]
			WHERE [FileName] = @FileName)
	BEGIN
		SELECT 1 AS FileExistsFlag
	END
ELSE
	BEGIN
		SELECT 0 AS FileExistsFlag
	END
"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9C95B346-6DF2-443A-B692-257C628BF451}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @FileName VARCHAR(100)&#xA;SET @FileName = '  '&#xA;IF EXISTS (&#x9;SELECT 1&#xA;&#x9;&#x9;&#x9;FROM [dbo].[FileLoadStatus]&#xA;&#x9;&#x9;&#x9;WHERE [FileName] = @FileName)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT 1 AS FileExistsFlag&#xA;&#x9;END&#xA;ELSE&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT 0 AS FileExistsFlag&#xA;&#x9;END&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::LoadStatusFlag" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E1F887D1-8857-426C-98E5-E6854BEBD9EE}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::LoadStatusFlag]  == 0"
          DTS:From="Package\Foreach Loop Container Read Flat Files from Input Folder\SQL_CHECK_FLAT_FILE_LOADED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{AF0F382E-5706-4DF7-9E7C-ED6D1FA80DE7}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::LoadStatusFlag]  == 1"
          DTS:From="Package\Foreach Loop Container Read Flat Files from Input Folder\SQL_CHECK_FLAT_FILE_LOADED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container Read Flat Files from Input Folder\Rejected File File System Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{CDAB0BA9-3FFB-4C48-98FB-E69867EC06D2}"
          DTS:From="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container Read Flat Files from Input Folder\Flat File Processed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{28011079-0139-4517-8C58-5DD3EA4CD47A}"
          DTS:From="Package\Foreach Loop Container Read Flat Files from Input Folder\Flat File Processed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container Read Flat Files from Input Folder\Insert File Name into DB SQL Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3A94496C-77F6-4134-BC1E-713968A257F2}"
          DTS:ObjectName="{3A94496C-77F6-4134-BC1E-713968A257F2}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{69A625FF-6C15-4655-A482-EA99EE453F47}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="1033"
      DTS:ObjectName="Foreach Loop Container Read XML Files from Input folder">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{36C2A50A-05CD-454B-8DC1-40930364C3C2}"
        DTS:ObjectName="{36C2A50A-05CD-454B-8DC1-40930364C3C2}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\New-Files" />
            <FEFEProperty
              FileSpec="*.xml" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder\Insert XML File Name into DB SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Insert File Name into DB SQL Task"
          DTS:DTSID="{efc776ea-35ec-4568-be0f-f6d3b4aaef5a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert XML File Name into DB SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9C95B346-6DF2-443A-B692-257C628BF451}"
              SQLTask:SqlStatementSource="INSERT INTO [DB_MS_SQL].[dbo].[FileLoadStatus] ([FileName]) VALUES (?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileNameXML"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{71CD7A51-708C-496C-B085-3452DF69BDAA}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load New XML File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion fechas y numerics"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_Precio]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Precio"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Precio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_Total]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Total"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Total]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_Cantidad]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Cantidad"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Cantidad]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_TotalUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_TotalUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TotalUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_Impuesto]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Impuesto"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Impuesto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_ImpuestoUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_ImpuestoUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_ImpuestoUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_Ganancia]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Ganancia"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Ganancia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_GananciaUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_GananciaUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_GananciaUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Copy_of_TipoDeCambio_Sin_Comas]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy_of_TipoDeCambio_Sin_Comas"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TipoDeCambio_Sin_Comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[Fecha]"
                          cachedDataType="wstr"
                          cachedLength="152"
                          cachedName="Fecha"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Fecha]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input].Columns[FechaVence]"
                          cachedDataType="wstr"
                          cachedLength="152"
                          cachedName="FechaVence"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[FechaVence]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Precio]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Precio]"
                          name="Copy of Copy_of_Precio"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Precio]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Total]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Total]"
                          name="Copy of Copy_of_Total"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Total]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Cantidad]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Cantidad]"
                          name="Copy of Copy_of_Cantidad"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Cantidad]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_TotalUSD]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_TotalUSD]"
                          name="Copy of Copy_of_TotalUSD"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TotalUSD]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Impuesto]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Impuesto]"
                          name="Copy of Copy_of_Impuesto"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Impuesto]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_ImpuestoUSD]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_ImpuestoUSD]"
                          name="Copy of Copy_of_ImpuestoUSD"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_ImpuestoUSD]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Ganancia]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Ganancia]"
                          name="Copy of Copy_of_Ganancia"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Ganancia]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_GananciaUSD]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_GananciaUSD]"
                          name="Copy of Copy_of_GananciaUSD"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_GananciaUSD]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_TipoDeCambio_Sin_Comas]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_TipoDeCambio_Sin_Comas]"
                          name="Copy of Copy_of_TipoDeCambio_Sin_Comas"
                          precision="20"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TipoDeCambio_Sin_Comas]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Fecha]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Fecha]"
                          name="Copy of Fecha"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Fecha]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of FechaVence]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of FechaVence]"
                          name="Copy of FechaVence"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[FechaVence]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  localeId="1033"
                  name="Data Conversion para convertir datos en str"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Factura]"
                          cachedDataType="ui4"
                          cachedName="Factura"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Factura]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Año]"
                          cachedDataType="ui2"
                          cachedName="Año"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Año]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Mes]"
                          cachedDataType="ui1"
                          cachedName="Mes"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Mes]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Dia]"
                          cachedDataType="ui1"
                          cachedName="Dia"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Dia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[AñoVencimiento]"
                          cachedDataType="ui2"
                          cachedName="AñoVencimiento"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[AñoVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[MesVencimiento]"
                          cachedDataType="ui1"
                          cachedName="MesVencimiento"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[MesVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[DiaVencimiento]"
                          cachedDataType="ui1"
                          cachedName="DiaVencimiento"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[DiaVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Cliente]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cliente"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cliente]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Producto]"
                          cachedDataType="ui2"
                          cachedName="Producto"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Producto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Moneda]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Moneda"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Moneda]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Almacén]"
                          cachedDataType="ui1"
                          cachedName="Almacén"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Almacén]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Vendedor]"
                          cachedDataType="i2"
                          cachedName="Vendedor"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Vendedor]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input].Columns[Tipo_de_cambio]"
                          cachedDataType="decimal"
                          cachedName="Tipo_de_cambio"
                          cachedScale="10"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Tipo_de_cambio]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Factura]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Factura]"
                          name="Copy of Factura"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Factura]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Año]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Año]"
                          name="Copy of Año"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Año]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Mes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Mes]"
                          name="Copy of Mes"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Mes]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Dia]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Dia]"
                          name="Copy of Dia"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Dia]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of AñoVencimiento]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of AñoVencimiento]"
                          name="Copy of AñoVencimiento"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[AñoVencimiento]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of MesVencimiento]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of MesVencimiento]"
                          name="Copy of MesVencimiento"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[MesVencimiento]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of DiaVencimiento]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of DiaVencimiento]"
                          name="Copy of DiaVencimiento"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[DiaVencimiento]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Cliente]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Cliente]"
                          name="Copy of Cliente"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cliente]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Producto]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Producto]"
                          name="Copy of Producto"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Producto]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Moneda]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Moneda]"
                          name="Copy of Moneda"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Moneda]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Almacén]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Almacén]"
                          name="Copy of Almacén"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Almacén]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Vendedor]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Vendedor]"
                          name="Copy of Vendedor"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Vendedor]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Tipo_de_cambio]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Tipo_de_cambio]"
                          name="Copy of Tipo_de_cambio"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Tipo_de_cambio]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Columns sin comas"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of Año]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Año"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Año]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of Mes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Mes"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Mes]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of Dia]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Dia"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Dia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of AñoVencimiento]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of AñoVencimiento"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of AñoVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of MesVencimiento]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of MesVencimiento"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of MesVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of DiaVencimiento]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of DiaVencimiento"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of DiaVencimiento]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Precio]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Precio"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Precio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Total]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Total"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Total]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Cantidad]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Cantidad"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cantidad]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[TotalUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TotalUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[TotalUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Impuesto]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Impuesto"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Impuesto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[ImpuestoUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ImpuestoUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[ImpuestoUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Ganacia]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ganacia"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Ganacia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[GananciaUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="GananciaUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[GananciaUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of Tipo_de_cambio]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Tipo_de_cambio"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Tipo_de_cambio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of Cliente]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Cliente"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Cliente]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"C" + (DT_STR,50,1252)([RIGHT]([REPLICATE]("0",6) + (DT_WSTR,6)[REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Cliente]},"C",""),6))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"C" + (DT_STR,50,1252)(RIGHT(REPLICATE("0",6) + (DT_WSTR,6)REPLACE([Copy of Cliente],"C",""),6))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input].Columns[Copy of Producto]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Producto"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Producto]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"A" + (DT_STR,50,1252)([RIGHT]([REPLICATE]("0",6) + (DT_WSTR,6)[REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Producto]},"A",""),6))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"A" + (DT_STR,50,1252)(RIGHT(REPLICATE("0",6) + (DT_WSTR,6)REPLACE([Copy of Producto],"A",""),6))</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Fecha]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="152"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Fecha]"
                          name="Fecha"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Dia]} + "/" + #{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Mes]} + "/" + #{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Año]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[Copy of Dia] + "/" + [Copy of Mes] + "/" + [Copy of Año]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[FechaVence]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="152"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[FechaVence]"
                          name="FechaVence"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of DiaVencimiento]} + "/" + #{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of MesVencimiento]} + "/" + #{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of AñoVencimiento]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[Copy of DiaVencimiento] + "/" + [Copy of MesVencimiento] + "/" + [Copy of AñoVencimiento]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Precio]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Precio]"
                          name="Copy_of_Precio"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Precio]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Precio,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Total]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Total]"
                          name="Copy_of_Total"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Total]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Total,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Cantidad]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Cantidad]"
                          name="Copy_of_Cantidad"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cantidad]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Cantidad,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TotalUSD]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TotalUSD]"
                          name="Copy_of_TotalUSD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[TotalUSD]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(TotalUSD,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Impuesto]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Impuesto]"
                          name="Copy_of_Impuesto"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Impuesto]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Impuesto,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_ImpuestoUSD]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_ImpuestoUSD]"
                          name="Copy_of_ImpuestoUSD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[ImpuestoUSD]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(ImpuestoUSD,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Ganancia]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Ganancia]"
                          name="Copy_of_Ganancia"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Ganacia]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(Ganacia,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_GananciaUSD]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_GananciaUSD]"
                          name="Copy_of_GananciaUSD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[GananciaUSD]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE(GananciaUSD,",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TipoDeCambio_Sin_Comas]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TipoDeCambio_Sin_Comas]"
                          name="Copy_of_TipoDeCambio_Sin_Comas"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([REPLACE](#{Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Tipo_de_cambio]},",",""),"\"","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(REPLACE([Copy of Tipo_de_cambio],",",""),"\"","")</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[VENTAS_PROGRA2]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,FIRE_TRIGGERS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-T525H9P.DB_MS_SQL]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Fecha]"
                          cachedDataType="date"
                          cachedName="Copy of Fecha"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Fecha]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of FechaVence]"
                          cachedDataType="date"
                          cachedName="Copy of FechaVence"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of FechaVence]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Factura]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Factura"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Factura]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Cliente]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Cliente"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Cliente]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Producto]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Producto"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Producto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_Cantidad]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_Cantidad"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Cantidad]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Moneda]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Moneda"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Moneda]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_Precio]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_Precio"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Precio]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_Total]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_Total"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Total]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Almacén]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Almacén"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Almacén]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Vendedor]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Vendedor"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output].Columns[Copy of Vendedor]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_TotalUSD]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_TotalUSD"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_TotalUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_Impuesto]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_Impuesto"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Impuesto]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy_of_ImpuestoUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_ImpuestoUSD"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImpuestoUSD]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_ImpuestoUSD]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_TipoDeCambio_Sin_Comas]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_TipoDeCambio_Sin_Comas"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TipoDeCambio]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_TipoDeCambio_Sin_Comas]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_Ganancia]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_Ganancia"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_Ganancia]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy_of_GananciaUSD]"
                          cachedDataType="numeric"
                          cachedName="Copy of Copy_of_GananciaUSD"
                          cachedPrecision="20"
                          cachedScale="4"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output].Columns[Copy of Copy_of_GananciaUSD]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Factura]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Factura" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Fecha]"
                          dataType="dbDate"
                          name="Fecha" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FechaVencimiento]"
                          dataType="dbDate"
                          name="FechaVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cliente]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cliente" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Producto]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Producto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cantidad]"
                          dataType="numeric"
                          name="Cantidad"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Moneda]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Moneda" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Precio]"
                          dataType="numeric"
                          name="Precio"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                          dataType="numeric"
                          name="Total"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Almacen]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Almacen" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendedor]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Vendedor" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalUSD]"
                          dataType="numeric"
                          name="TotalUSD"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Impuesto]"
                          dataType="numeric"
                          name="Impuesto"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImpuestoUSD]"
                          dataType="numeric"
                          name="ImpuestoUSD"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TipoDeCambio]"
                          dataType="numeric"
                          name="TipoDeCambio"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ganancia]"
                          dataType="numeric"
                          name="Ganancia"
                          precision="20"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GananciaUSD]"
                          dataType="numeric"
                          name="GananciaUSD"
                          precision="20"
                          scale="4" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script C# reemplace punto excepto el último"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        Row.CopyofTotal = ReplaceDotExceptLast(Row.CopyofTotal);
        Row.CopyofPrecio = ReplaceDotExceptLast(Row.CopyofPrecio);
        Row.CopyofTotalUSD = ReplaceDotExceptLast(Row.CopyofTotalUSD);
        Row.CopyofCantidad = ReplaceDotExceptLast(Row.CopyofCantidad);
        Row.CopyofImpuesto = ReplaceDotExceptLast(Row.CopyofImpuesto);
        Row.CopyofImpuestoUSD = ReplaceDotExceptLast(Row.CopyofImpuestoUSD);
        Row.CopyofGanancia = ReplaceDotExceptLast(Row.CopyofGanancia);
        Row.CopyofGananciaUSD = ReplaceDotExceptLast(Row.CopyofGananciaUSD);
        Row.CopyofTipoDeCambioSinComas = ReplaceDotExceptLast(Row.CopyofTipoDeCambioSinComas);

    }

    public string ReplaceDotExceptLast(string value)
    {
        int lastIndex = value.LastIndexOf('.');
        if (lastIndex > 0)
        {
            value = value.Substring(0, lastIndex).Replace(".", "")
                + value.Substring(lastIndex);
        }
        return value;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CopyofPrecio
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CopyofPrecio_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofTotal
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool CopyofTotal_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofCantidad
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool CopyofCantidad_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofTotalUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool CopyofTotalUSD_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofImpuesto
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool CopyofImpuesto_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofImpuestoUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool CopyofImpuestoUSD_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofGanancia
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool CopyofGanancia_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofGananciaUSD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool CopyofGananciaUSD_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CopyofTipoDeCambioSinComas
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool CopyofTipoDeCambioSinComas_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0658699efc6e4eb2b9ba1d256660ea05.Properties.Settings.get_Default():SC_0658699efc6e4eb2b9ba1d256660ea05.Properties.Sett" +
    "ings")]

namespace SC_0658699efc6e4eb2b9ba1d256660ea05.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0658699efc6e4eb2b9ba1d256660ea05.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4e8c25c5-d86b-4563-afeb-1f1298eadd2f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0658699efc6e4eb2b9ba1d256660ea05</RootNamespace>
    <AssemblyName>SC_0658699efc6e4eb2b9ba1d256660ea05</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0658699efc6e4eb2b9ba1d256660ea05" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_0658699efc6e4eb2b9ba1d256660ea05</msb:CodeName>
    <msb:DisplayName>SC_0658699efc6e4eb2b9ba1d256660ea05</msb:DisplayName>
    <msb:ProjectId>{603E72FA-8402-4361-B987-C2726304070D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0658699efc6e4eb2b9ba1d256660ea05.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0658699efc6e4eb2b9ba1d256660ea05")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0658699efc6e4eb2b9ba1d256660ea05")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0658699efc6e4eb2b9ba1d256660ea05.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0658699efc6e4eb2b9ba1d256660ea05.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0658699efc6e4eb2b9ba1d256660ea05.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0658699efc6e4eb2b9ba1d256660ea05.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0658699efc6e4eb2b9ba1d256660ea05.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0658699efc6e4eb2b9ba1d256660ea05.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAJrD2AAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAASjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg6AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
OwAAAAAAAEgAAAACAAUAgCQAAMAVAAABAAAAAAAAAEA6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAowAAAAAAAAADAgNvCwAA
BigEAAAGbwwAAAYDAgNvBwAABigEAAAGbwgAAAYDAgNvEwAABigEAAAGbxQAAAYDAgNvDwAABigE
AAAGbxAAAAYDAgNvFwAABigEAAAGbxgAAAYDAgNvGwAABigEAAAGbxwAAAYDAgNvHwAABigEAAAG
byAAAAYDAgNvIwAABigEAAAGbyQAAAYDAgNvJwAABigEAAAGbygAAAYqABMwAwA0AAAAAQAAEQMf
Lm8SAAAKCgYWMSUDFgZvEwAACnIBAABwcgUAAHBvFAAACgMGbxUAAAooFgAAChABAyoeAigtAAAG
KioCAwQFKBcAAAoqUgJ7GAAACgJ7GQAAChaUbxoAAAoqJgIWAygbAAAKKiICFigcAAAKKloDLAgC
FigdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAACheUbxoAAAoqJgIXAygbAAAKKiICFygcAAAK
KloDLAgCFygdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAAChiUbxoAAAoqJgIYAygbAAAKKiIC
GCgcAAAKKloDLAgCGCgdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAAChmUbxoAAAoqJgIZAygb
AAAKKiICGSgcAAAKKloDLAgCGSgdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAAChqUbxoAAAoq
JgIaAygbAAAKKiICGigcAAAKKloDLAgCGigdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7GQAAChuU
bxoAAAoqJgIbAygbAAAKKiICGygcAAAKKloDLAgCGygdAAAKKnIHAABwcx4AAAp6UgJ7GAAACgJ7
GQAAChyUbxoAAAoqJgIcAygbAAAKKiICHCgcAAAKKloDLAgCHCgdAAAKKnIHAABwcx4AAAp6UgJ7
GAAACgJ7GQAACh2UbxoAAAoqJgIdAygbAAAKKiICHSgcAAAKKloDLAgCHSgdAAAKKnIHAABwcx4A
AAp6UgJ7GAAACgJ7GQAACh6UbxoAAAoqJgIeAygbAAAKKiICHigcAAAKKloDLAgCHigdAAAKKnIH
AABwcx4AAAp6HgIoHwAACioeAiggAAAKKn4CKCEAAAoCAnMxAAAGfQEAAAQCAnMyAAAGfQIAAAQq
kgRypAAAcBpvIgAACiwVAgUCAygjAAAKDgRzBgAABm8vAAAGKkorBwIDbzAAAAYDbysAAAYt8SoG
KjoCKCQAAAoCA30DAAAEKjoCKCQAAAoCA30EAAAEKh4CKCQAAAoqrn4FAAAELR5ytAAAcNAHAAAC
KCUAAApvJgAACnMnAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoKAAACiou
czgAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQCAAAI34AADwJ
AACMCQAAI1N0cmluZ3MAAAAAyBIAACgBAAAjVVMA8BMAABAAAAAjR1VJRAAAAAAUAADAAQAAI0Js
b2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAHwAAAAgAAAAHAAAAOQAAACAAAAAoAAAA
EAAAAAEAAAADAAAAFQAAACgAAAABAAAABAAAAAEAAAAAAPUDAQAAAAAABgC2AqgHBgBKA6gHBgAC
ApUHDwAcCAAABgAvAmQGBgCZAmQGBgB6AmQGBgAxA2QGBgDWAmQGBgDvAmQGBgBGAmQGBgBhApED
CgAKA08BCgApB08BDgAaB08BCgD1Bk8BCgDpCE8BBgCsCBwGBgDlAZUHBgA6B8gHBgChBk8GEgC1
Ad8DEgAWAt8DEgCdAToGBgDKAagHBgCuAxwGBgB2BhwGBgCQBhwGBgBwARwGBgAhARwGBgCDCWQG
AAAAACUAAAAAAAEAAQABABAALwYAABAAAQABAAEAEAANBwAAOQABAAYAAQAQAMsIAABFAAEALQAB
ABAAmQgAAEkAAwAxAAEAEABaCAAASQAEADIAAAAQAM8HKwhJAAUAMwAAARAAiQgrCGEABwA3AAYA
mQiOAAYAWgiSAAEA2QiWAAEA2QiWABEAIwaaABEAjQGeABEAEQGiAFAgAAAAAMYAaAMGAAEAWCAA
AAAAxgBzAwYAAQBgIAAAAADGAGAJpgABABAhAAAAAIYAFgmsAAIAUCEAAAAAhhhKBwYAAwBYIQAA
AACGGEoHOwADAGMhAAAAAIYIrQaxAAYAeCEAAAAAhgi+BhAABgCCIQAAAACGCFsFWAAHAIshAAAA
AIYIcwW1AAcAoiEAAAAAhgi/A7EACAC3IQAAAACGCM8DEAAIAMEhAAAAAIYILQVYAAkAyiEAAAAA
hghEBbUACQDhIQAAAACGCOMAsQAKAPYhAAAAAIYI9gAQAAoAACIAAAAAhgj5BFgACwAJIgAAAACG
CBMFtQALACAiAAAAAIYIYgCxAAwANSIAAAAAhgh1ABAADAA/IgAAAACGCFcEWAANAEgiAAAAAIYI
cQS1AA0AXyIAAAAAhgjPBrEADgB0IgAAAACGCOIGEAAOAH4iAAAAAIYIiwVYAA8AhyIAAAAAhgil
BbUADwCeIgAAAACGCIgAsQAQALMiAAAAAIYIngAQABAAvSIAAAAAhgiLBFgAEQDGIgAAAACGCKgE
tQARAN0iAAAAAIYItACxABIA8iIAAAAAhgjHABAAEgD8IgAAAACGCMUEWAATAAUjAAAAAIYI3wS1
ABMAHCMAAAAAhgg2ALEAFAAxIwAAAACGCEwAEAAUADsjAAAAAIYIHQRYABUARCMAAAAAhgg6BLUA
FQBbIwAAAACGCFcHsQAWAHAjAAAAAIYIdgcQABYAeiMAAAAAhgi/BVgAFwCDIwAAAACGCOUFtQAX
AJojAAAAAIYAdwlYABgAoiMAAAAAhgCzCFgAGACqIwAAAACGGEoHBgAYAMojAAAAAMYAUwm6ABgA
7yMAAAAAxgFMCaYAHAACJAAAAADGAWAJpgAdAAQkAAAAAIYYSgfEAB4AEyQAAAAAhhhKB8QAHwAi
JAAAAACDGEoHBgAgACokAAAAAJMINgfKACAAViQAAAAAkwh1Ac8AIABdJAAAAACTCIEB1AAgAGUk
AAAAAJYIvwjaACEAbCQAAAAAhhhKBwYAIQB0JAAAAACRGFAH3wAhAAAAAQB7CQAAAQB/AwAAAQAv
BwAAAgBkCAAAAwADBwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAA
AQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/AwAAAQB/
AwAAAQB/AwAAAQAuAAAAAgBFAQAAAwAvBwAABAADBwAAAQAvBwAAAQB7CQAAAQDvCAAAAQDvCAAA
AQB/AwkASgcBABEASgcGABkASgcKACkASgcQADEASgcQADkASgcQAEEASgcQAEkASgcQAFEASgcQ
AFkASgcQAGEASgcQAGkASgcGAJkASgcGALkASgcVAMkASgcGAIkAaAMGAIkAcwMGANEAhQMfANEA
tQMkANEACQEqANEAtQMwANEApQg1AHEASgc7AHEALwdFAHEAZAhJAHkAqwMwAHEAEwZNAHEABAZT
AHEACwYBANkASgcQAHEAdwlYAHEAswhYAIkASgcGANEAkghcAIkAeAhjAJEASgcGAOkAMwFpAOkA
fwlwAKEASgd1AMEASgcGAC4ACwD6AC4AEwADAS4AGwAiAS4AIwArAS4AKwBUAS4AMwBUAS4AOwBU
AS4AQwArAS4ASwBaAS4AUwBUAS4AWwBxAUMAYwC7AeEAewC7AeMAawC7AWkCcwAiAYkCcwAiARsA
AwABAAcAEwAIABUAAADCBuMAAAB3BecAAADTA+MAAABIBecAAAD6AOMAAAAXBecAAAB5AOMAAAB1
BOcAAADmBuMAAACpBecAAACiAOMAAACsBOcAAADLAOMAAADjBOcAAABQAOMAAAA+BOcAAAB6B+MA
AADpBecAAAA6B+sAAACVAfAAAADDCPUAAgAHAAMAAQAIAAMAAgAJAAUAAQAKAAUAAgALAAcAAQAM
AAcAAgANAAkAAQAOAAkAAgAPAAsAAQAQAAsAAgARAA0AAQASAA0AAgATAA8AAQAUAA8AAgAVABEA
AQAWABEAAgAXABMAAQAYABMAAgAZABUAAQAaABUAAgAbABcAAQAcABcAAgAdABkAAQAeABkAAgAf
ABsAAQAgABsAAgAhAB0AAQAiAB0AAgAjAB8AAQAkAB8AAgAlACEAAQAmACEAAgAnACMAAQAoACMA
AgApACUAAQAqACUAAgA0ACcAAgA1ACkAAQA2ACkAAgA3ACsABIAAAAEAAAAAAAAAAAAAAAAAAQAA
AAQAAAAAAAAAAAAAAHwA2gAAAAAADwAAAAAAAAAAAAAAhQD5CAAAAAAPAAAAAAAAAAAAAACFACsJ
AAAAAAQAAAAAAAAAAAAAAHwAHAYAAAAAAAAAAAEAAADZBwAAAAAAU0NfMDY1ODY5OWVmYzZlNGVi
MmI5YmExZDI1NjY2MGVhMDUAPE1vZHVsZT4ASW5wdXRJRABnZXRfQ29weW9mR2FuYW5jaWFVU0QA
c2V0X0NvcHlvZkdhbmFuY2lhVVNEAGdldF9Db3B5b2ZUb3RhbFVTRABzZXRfQ29weW9mVG90YWxV
U0QAZ2V0X0NvcHlvZkltcHVlc3RvVVNEAHNldF9Db3B5b2ZJbXB1ZXN0b1VTRABnZXRfQ29weW9m
R2FuYW5jaWEAc2V0X0NvcHlvZkdhbmFuY2lhAG1zY29ybGliAGdldF9Db3B5b2ZDYW50aWRhZABz
ZXRfQ29weW9mQ2FudGlkYWQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFBy
ZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUATGFzdEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBHZXRTdHJpbmcAU3Vic3RyaW5nAGdldF9Db3B5b2ZUb3RhbABzZXRfQ29weW9mVG90
YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzA2NTg2OTllZmM2ZTRlYjJiOWJhMWQyNTY2NjBl
YTA1LmRsbABnZXRfQ29weW9mR2FuYW5jaWFVU0RfSXNOdWxsAHNldF9Db3B5b2ZHYW5hbmNpYVVT
RF9Jc051bGwAZ2V0X0NvcHlvZlRvdGFsVVNEX0lzTnVsbABzZXRfQ29weW9mVG90YWxVU0RfSXNO
dWxsAGdldF9Db3B5b2ZJbXB1ZXN0b1VTRF9Jc051bGwAc2V0X0NvcHlvZkltcHVlc3RvVVNEX0lz
TnVsbABnZXRfQ29weW9mR2FuYW5jaWFfSXNOdWxsAHNldF9Db3B5b2ZHYW5hbmNpYV9Jc051bGwA
Z2V0X0NvcHlvZkNhbnRpZGFkX0lzTnVsbABzZXRfQ29weW9mQ2FudGlkYWRfSXNOdWxsAGdldF9D
b3B5b2ZUb3RhbF9Jc051bGwAc2V0X0NvcHlvZlRvdGFsX0lzTnVsbABnZXRfQ29weW9mUHJlY2lv
X0lzTnVsbABzZXRfQ29weW9mUHJlY2lvX0lzTnVsbABnZXRfQ29weW9mSW1wdWVzdG9fSXNOdWxs
AHNldF9Db3B5b2ZJbXB1ZXN0b19Jc051bGwAZ2V0X0NvcHlvZlRpcG9EZUNhbWJpb1NpbkNvbWFz
X0lzTnVsbABzZXRfQ29weW9mVGlwb0RlQ2FtYmlvU2luQ29tYXNfSXNOdWxsAFNldE51bGwAc2V0
X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4
Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAGdldF9Db3B5b2ZQcmVjaW8Ac2V0
X0NvcHlvZlByZWNpbwBnZXRfQ29weW9mSW1wdWVzdG8Ac2V0X0NvcHlvZkltcHVlc3RvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZm
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAZ2V0X0NvcHlvZlRpcG9EZUNhbWJp
b1NpbkNvbWFzAHNldF9Db3B5b2ZUaXBvRGVDYW1iaW9TaW5Db21hcwBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzA2
NTg2OTllZmM2ZTRlYjJiOWJhMWQyNTY2NjBlYTA1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wNjU4Njk5ZWZjNmU0ZWIyYjliYTFkMjU2NjYwZWEwNS5Q
cm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMA
U2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0
X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAUmVwbGFjZURvdEV4Y2VwdExhc3QATWljcm9zb2Z0
LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vz
c0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAADLgAAAQCAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAwADYANQA4ADYA
OQA5AGUAZgBjADYAZQA0AGUAYgAyAGIAOQBiAGEAMQBkADIANQA2ADYANgAwAGUAYQAwADUALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAgNxDF5NvtUykDEWrBjLR
wQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQgEIAEIAwUgAg4ICAUgAg4ODgQgAQ4IBQAC
Dg4OCSADARI9HQgSQQMGEj0DBh0IBSACAQgcBCABAggDIAACBiACAg4RcQUgAR0ICAYAARJ1EXkE
IAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEB
EgwEIAEODgMgAA4EIAEBAgkgBAEIDhI9EkEFIAEBEkUEAAASUQQAABJVBQABARJVBAAAEiADAAAB
AygADgMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NDXzA2NTg2OTllZmM2ZTRlYjJiOWJhMWQyNTY2NjBlYTA1AAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAIDsAAAAAAAAAAAAAOjsAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw7AAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADAANgA1ADgANgA5ADkAZQBmAGMANgBlADQAZQBiADIAYgA5AGIAYQAxAGQAMgA1ADYANgA2
ADAAZQBhADAANQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAA2ADUAOAA2ADkAOQBl
AGYAYwA2AGUANABlAGIAMgBiADkAYgBhADEAZAAyADUANgA2ADYAMABlAGEAMAA1AC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwADYANQA4
ADYAOQA5AGUAZgBjADYAZQA0AGUAYgAyAGIAOQBiAGEAMQBkADIANQA2ADYANgAwAGUAYQAwADUA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAA2ADUAOAA2
ADkAOQBlAGYAYwA2AGUANABlAGIAMgBiADkAYgBhADEAZAAyADUANgA2ADYAMABlAGEAMAA1AAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABMOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0658699efc6e4eb2b9ba1d256660ea05</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">AF</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_Precio]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Precio"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Precio]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_Total]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Total"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Total]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_Cantidad]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Cantidad"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Cantidad]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_TotalUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_TotalUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TotalUSD]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_Impuesto]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Impuesto"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Impuesto]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_ImpuestoUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_ImpuestoUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_ImpuestoUSD]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_Ganancia]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_Ganancia"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_Ganancia]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_GananciaUSD]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy_of_GananciaUSD"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_GananciaUSD]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0].Columns[Copy_of_TipoDeCambio_Sin_Comas]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy_of_TipoDeCambio_Sin_Comas"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output].Columns[Copy_of_TipoDeCambio_Sin_Comas]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element.;Microsoft Corporation;Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element."
                  name="XML Source"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.XmlSourceAdapter</property>
                    <property
                      dataType="System.String"
                      description="The XML data used by the XML source adapter."
                      expressionType="Notify"
                      name="XMLData"></property>
                    <property
                      dataType="System.String"
                      description="The variable used by the XML source adapter to specify XML data."
                      name="XMLDataVariable">User::FillFullPathXML</property>
                    <property
                      dataType="System.Int32"
                      description="Defines how the XML source adapter gets XML data."
                      name="AccessMode">1</property>
                    <property
                      dataType="System.String"
                      description="The XML schema definition used by the XML source adapter."
                      expressionType="Notify"
                      name="XMLSchemaDefinition">D:\Documentos\Ing en Computacion\Semestre IV\Bases de Datos ll\Progra 2\Codigo\DB2-Final-Project\MS-SQL\Read-Files\201-300_para_XML_v3.xsd</property>
                    <property
                      dataType="System.Boolean"
                      description="Identifies whether or not to use inline schema."
                      name="UseInlineSchema">false</property>
                    <property
                      dataType="System.Int32"
                      description="Defines how XML integer types are mapped."
                      name="XMLIntegerMapping"
                      typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter">0</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura]"
                      name="NuevaFactura">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Identifies the rowset associated with the output."
                          name="RowsetID">NuevaFactura</property>
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Factura]"
                          dataType="ui4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Factura]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Factura]"
                          name="Factura"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Año]"
                          dataType="ui2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Año]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Año]"
                          name="Año"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Mes]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Mes]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Mes]"
                          name="Mes"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Dia]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Dia]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Dia]"
                          name="Dia"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[AñoVencimiento]"
                          dataType="ui2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[AñoVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[AñoVencimiento]"
                          name="AñoVencimiento"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[MesVencimiento]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[MesVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[MesVencimiento]"
                          name="MesVencimiento"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[DiaVencimiento]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[DiaVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[DiaVencimiento]"
                          name="DiaVencimiento"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cliente]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Cliente]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cliente]"
                          name="Cliente"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Producto]"
                          dataType="ui2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Producto]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Producto]"
                          name="Producto"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cantidad]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Cantidad]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Cantidad]"
                          name="Cantidad"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Moneda]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Moneda]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Moneda]"
                          name="Moneda"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Precio]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Precio]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Precio]"
                          name="Precio"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Total]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Total]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Total]"
                          name="Total"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Almacén]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Almacén]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Almacén]"
                          name="Almacén"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Vendedor]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Vendedor]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Vendedor]"
                          name="Vendedor"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[TotalUSD]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[TotalUSD]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[TotalUSD]"
                          name="TotalUSD"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Impuesto]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Impuesto]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Impuesto]"
                          name="Impuesto"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[ImpuestoUSD]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[ImpuestoUSD]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[ImpuestoUSD]"
                          name="ImpuestoUSD"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Ganacia]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Ganacia]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Ganacia]"
                          name="Ganacia"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[GananciaUSD]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[GananciaUSD]"
                          length="255"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[GananciaUSD]"
                          name="GananciaUSD"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Tipo_de_cambio]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Tipo_de_cambio]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].Columns[Tipo_de_cambio]"
                          name="Tipo_de_cambio"
                          scale="10"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Factura]"
                          dataType="ui4"
                          name="Factura">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.UInt32</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Año]"
                          dataType="ui2"
                          name="Año">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.UInt16</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Mes]"
                          dataType="ui1"
                          name="Mes">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Byte</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Dia]"
                          dataType="ui1"
                          name="Dia">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Byte</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[AñoVencimiento]"
                          dataType="ui2"
                          name="AñoVencimiento">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.UInt16</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[MesVencimiento]"
                          dataType="ui1"
                          name="MesVencimiento">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Byte</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[DiaVencimiento]"
                          dataType="ui1"
                          name="DiaVencimiento">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Byte</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Cliente]"
                          dataType="wstr"
                          length="255"
                          name="Cliente">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Producto]"
                          dataType="ui2"
                          name="Producto">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.UInt16</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Cantidad]"
                          dataType="wstr"
                          length="255"
                          name="Cantidad">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Moneda]"
                          dataType="wstr"
                          length="255"
                          name="Moneda">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Precio]"
                          dataType="wstr"
                          length="255"
                          name="Precio">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Total]"
                          dataType="wstr"
                          length="255"
                          name="Total">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Almacén]"
                          dataType="ui1"
                          name="Almacén">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Byte</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Vendedor]"
                          dataType="i2"
                          name="Vendedor">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Int16</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[TotalUSD]"
                          dataType="wstr"
                          length="255"
                          name="TotalUSD">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Impuesto]"
                          dataType="wstr"
                          length="255"
                          name="Impuesto">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[ImpuestoUSD]"
                          dataType="wstr"
                          length="255"
                          name="ImpuestoUSD">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Ganacia]"
                          dataType="wstr"
                          length="255"
                          name="Ganacia">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[GananciaUSD]"
                          dataType="wstr"
                          length="255"
                          name="GananciaUSD">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.String</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura].ExternalColumns[Tipo_de_cambio]"
                          dataType="decimal"
                          name="Tipo_de_cambio"
                          scale="10">
                          <properties>
                            <property
                              dataType="System.String"
                              name="CLRType">System.Decimal</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output]"
                      isErrorOut="true"
                      name="NuevaFactura Error Output">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Identifies the rowset associated with the output."
                          name="RowsetID">NuevaFactura</property>
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Factura]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Factura]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Factura]"
                          name="Factura" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Año]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Año]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Año]"
                          name="Año" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Mes]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Mes]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Mes]"
                          name="Mes" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Dia]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Dia]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Dia]"
                          name="Dia" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[AñoVencimiento]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[AñoVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[AñoVencimiento]"
                          name="AñoVencimiento" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[MesVencimiento]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[MesVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[MesVencimiento]"
                          name="MesVencimiento" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[DiaVencimiento]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[DiaVencimiento]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[DiaVencimiento]"
                          name="DiaVencimiento" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Cliente]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Cliente]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Cliente]"
                          name="Cliente" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Producto]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Producto]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Producto]"
                          name="Producto" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Cantidad]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Cantidad]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Cantidad]"
                          name="Cantidad" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Moneda]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Moneda]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Moneda]"
                          name="Moneda" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Precio]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Precio]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Precio]"
                          name="Precio" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Total]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Total]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Total]"
                          name="Total" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Almacén]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Almacén]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Almacén]"
                          name="Almacén" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Vendedor]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Vendedor]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Vendedor]"
                          name="Vendedor" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[TotalUSD]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[TotalUSD]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[TotalUSD]"
                          name="TotalUSD" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Impuesto]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Impuesto]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Impuesto]"
                          name="Impuesto" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[ImpuestoUSD]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[ImpuestoUSD]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[ImpuestoUSD]"
                          name="ImpuestoUSD" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Ganacia]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Ganacia]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Ganacia]"
                          name="Ganacia" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[GananciaUSD]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[GananciaUSD]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[GananciaUSD]"
                          name="GananciaUSD" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Tipo_de_cambio]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Tipo_de_cambio]"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[Tipo_de_cambio]"
                          name="Tipo_de_cambio" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Factura]"
                          dataType="nText"
                          name="Factura" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Año]"
                          dataType="nText"
                          name="Año" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Mes]"
                          dataType="nText"
                          name="Mes" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Dia]"
                          dataType="nText"
                          name="Dia" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[AñoVencimiento]"
                          dataType="nText"
                          name="AñoVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[MesVencimiento]"
                          dataType="nText"
                          name="MesVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[DiaVencimiento]"
                          dataType="nText"
                          name="DiaVencimiento" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Cliente]"
                          dataType="nText"
                          name="Cliente" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Producto]"
                          dataType="nText"
                          name="Producto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Cantidad]"
                          dataType="nText"
                          name="Cantidad" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Moneda]"
                          dataType="nText"
                          name="Moneda" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Precio]"
                          dataType="nText"
                          name="Precio" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Total]"
                          dataType="nText"
                          name="Total" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Almacén]"
                          dataType="nText"
                          name="Almacén" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Vendedor]"
                          dataType="nText"
                          name="Vendedor" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[TotalUSD]"
                          dataType="nText"
                          name="TotalUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Impuesto]"
                          dataType="nText"
                          name="Impuesto" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[ImpuestoUSD]"
                          dataType="nText"
                          name="ImpuestoUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Ganacia]"
                          dataType="nText"
                          name="Ganacia" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[GananciaUSD]"
                          dataType="nText"
                          name="GananciaUSD" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura Error Output].ExternalColumns[Tipo_de_cambio]"
                          dataType="nText"
                          name="Tipo_de_cambio" />
                      </externalMetadataColumns>
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Data Conversion Output1]"
                  endId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[NuevaFactura]"
                  endId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str.Inputs[Data Conversion Input]"
                  name="NuevaFactura"
                  startId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source.Outputs[NuevaFactura]" />
                <path
                  refId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Output 0]"
                  endId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics.Inputs[Data Conversion Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder\Rejected XML File System Task"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{8caa3180-95c4-4424-84e4-110c338222bd}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Rejected XML File System Task"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::FillFullPathXML"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::RejectedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder\SQL_CHECK_XML_FILE_LOADED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ba88e66c-509c-48eb-9664-df662d314f4f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL_CHECK_XML_FILE_LOADED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"
DECLARE @FileName VARCHAR(100)
SET @FileName = ' "+ @[User::FileName]+" '
IF EXISTS (	SELECT 1
			FROM [dbo].[FileLoadStatus]
			WHERE [FileName] = @FileName)
	BEGIN
		SELECT 1 AS FileExistsFlag
	END
ELSE
	BEGIN
		SELECT 0 AS FileExistsFlag
	END
"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9C95B346-6DF2-443A-B692-257C628BF451}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @FileName VARCHAR(100)&#xA;SET @FileName = '  '&#xA;IF EXISTS (&#x9;SELECT 1&#xA;&#x9;&#x9;&#x9;FROM [dbo].[FileLoadStatus]&#xA;&#x9;&#x9;&#x9;WHERE [FileName] = @FileName)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT 1 AS FileExistsFlag&#xA;&#x9;END&#xA;ELSE&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;SELECT 0 AS FileExistsFlag&#xA;&#x9;END&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::LoadStatusFlag" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::FileNameXML"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder\XML File Processed"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="Move xml processed files"
          DTS:DTSID="{8565196c-0387-45b8-bcbb-68b3b0300e71}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="XML File Processed"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::FillFullPathXML"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ProcessedFolder"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F9FD8B9B-E6C1-4E51-A0C7-0BB8A958A4C8}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::LoadStatusFlag] == 0"
          DTS:From="Package\Foreach Loop Container Read XML Files from Input folder\SQL_CHECK_XML_FILE_LOADED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{35CE84C6-7809-43ED-B0FA-49C0C8D5EBEA}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::LoadStatusFlag] == 1"
          DTS:From="Package\Foreach Loop Container Read XML Files from Input folder\SQL_CHECK_XML_FILE_LOADED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container Read XML Files from Input folder\Rejected XML File System Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{932D7FDB-B5D4-4FD8-8DD3-4DD6F9EC398F}"
          DTS:From="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container Read XML Files from Input folder\XML File Processed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{5F631177-D292-42E9-9552-3E5DFB7427AB}"
          DTS:From="Package\Foreach Loop Container Read XML Files from Input folder\XML File Processed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container Read XML Files from Input folder\Insert XML File Name into DB SQL Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{50DEE41E-B986-41C6-AEF7-6194F456D798}"
          DTS:ObjectName="{50DEE41E-B986-41C6-AEF7-6194F456D798}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileNameXML" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{46EEC58E-05A4-4331-90A8-3ED5F970B805}"
      DTS:From="Package\Foreach Loop Container Read Flat Files from Input Folder"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container Read XML Files from Input folder" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{20CE3848-9EEE-4E6E-A7D7-7844A00090C9}"
      DTS:From="Package\Foreach Loop Container Read XML Files from Input folder"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container Read Excel Files From Input Folder" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Excel File Processed"
          TopLeft="19,198" />
        <NodeLayout
          Size="270,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Insert Excel File Name into DB SQL Task"
          TopLeft="7,267" />
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File"
          TopLeft="31,126" />
        <NodeLayout
          Size="221,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Rejected File File System Task"
          TopLeft="248,124" />
        <NodeLayout
          Size="244,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\SQL_CHECK_EXCEL_FILE_LOADED"
          TopLeft="96.25,40" />
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint]"
          TopLeft="178.916666666667,82">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.4166666666667,44"
              Start="0,0"
              End="-61.4166666666667,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.771986970684" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.771986970684"
                    Point2="0,17.771986970684"
                    Point3="-4,17.771986970684" />
                  <mssgle:LineSegment
                    End="-57.4166666666667,17.771986970684" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.4166666666667,17.771986970684"
                    Point2="-61.4166666666667,17.771986970684"
                    Point3="-61.4166666666667,21.771986970684" />
                  <mssgle:LineSegment
                    End="-61.4166666666667,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.7083333333333,22.771986970684,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint 1]"
          TopLeft="257.583333333333,82">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100.916666666667,42"
              Start="0,0"
              End="100.916666666667,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.9641693811075" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.9641693811075"
                    Point2="0,16.9641693811075"
                    Point3="4,16.9641693811075" />
                  <mssgle:LineSegment
                    End="96.9166666666667,16.9641693811075" />
                  <mssgle:CubicBezierSegment
                    Point1="96.9166666666667,16.9641693811075"
                    Point2="100.916666666667,16.9641693811075"
                    Point3="100.916666666667,20.9641693811075" />
                  <mssgle:LineSegment
                    End="100.916666666667,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="42.4583333333333,21.9641693811075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint 2]"
          TopLeft="117.5,168">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12,30"
              Start="0,0"
              End="-12,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11"
                    Point2="0,15"
                    Point3="-4,15" />
                  <mssgle:LineSegment
                    End="-8,15" />
                  <mssgle:CubicBezierSegment
                    Point1="-8,15"
                    Point2="-12,15"
                    Point3="-12,19" />
                  <mssgle:LineSegment
                    End="-12,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder.PrecedenceConstraints[Constraint 3]"
          TopLeft="105.5,240">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.5,27"
              Start="0,0"
              End="36.5,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.5"
                    Point2="0,13.5"
                    Point3="4,13.5" />
                  <mssgle:LineSegment
                    End="32.5,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="32.5,13.5"
                    Point2="36.5,13.5"
                    Point3="36.5,17.5" />
                  <mssgle:LineSegment
                    End="36.5,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="505,364"
          Size="505,407"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder"
          TopLeft="48.5,517" />
        <NodeLayout
          Size="166,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Flat File Processed"
          TopLeft="59.25,177.75" />
        <NodeLayout
          Size="244,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Insert File Name into DB SQL Task"
          TopLeft="21.75,248.75" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File"
          TopLeft="54.25,112.75" />
        <NodeLayout
          Size="221,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Rejected File File System Task"
          TopLeft="254,116" />
        <NodeLayout
          Size="237,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\SQL_CHECK_FLAT_FILE_LOADED"
          TopLeft="114,42" />
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint]"
          TopLeft="194.333333333333,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-57.5833333333333,28.75"
              Start="0,0"
              End="-57.5833333333333,21.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.61567476948868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.61567476948868"
                    Point2="0,11.6156747694887"
                    Point3="-4,11.6156747694887" />
                  <mssgle:LineSegment
                    End="-53.5833333333333,11.6156747694887" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.5833333333333,11.6156747694887"
                    Point2="-57.5833333333333,11.6156747694887"
                    Point3="-57.5833333333333,15.6156747694887" />
                  <mssgle:LineSegment
                    End="-57.5833333333333,21.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.7916666666667,16.6156747694887,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint 1]"
          TopLeft="270.666666666667,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93.8333333333334,32"
              Start="0,0"
              End="93.8333333333334,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.92875104777871" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.92875104777871"
                    Point2="0,12.9287510477787"
                    Point3="4,12.9287510477787" />
                  <mssgle:LineSegment
                    End="89.8333333333334,12.9287510477787" />
                  <mssgle:CubicBezierSegment
                    Point1="89.8333333333334,12.9287510477787"
                    Point2="93.8333333333334,12.9287510477787"
                    Point3="93.8333333333334,16.9287510477787" />
                  <mssgle:LineSegment
                    End="93.8333333333334,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.9166666666667,17.9287510477787,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint 2]"
          TopLeft="139.5,154.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23"
              Start="0,0"
              End="0,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder.PrecedenceConstraints[Constraint 3]"
          TopLeft="143,219.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="492,355"
          Size="492,398"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder"
          TopLeft="52.2500000000001,63" />
        <NodeLayout
          Size="265,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Insert XML File Name into DB SQL Task"
          TopLeft="8.75,247" />
        <NodeLayout
          Size="168,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File"
          TopLeft="32,110" />
        <NodeLayout
          Size="225,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Rejected XML File System Task"
          TopLeft="215,116" />
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\SQL_CHECK_XML_FILE_LOADED"
          TopLeft="97,33" />
        <NodeLayout
          Size="169,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\XML File Processed"
          TopLeft="35,179" />
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint]"
          TopLeft="176.333333333333,75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.3333333333333,35"
              Start="0,0"
              End="-60.3333333333333,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.1426146010187" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.1426146010187"
                    Point2="0,14.1426146010187"
                    Point3="-4,14.1426146010187" />
                  <mssgle:LineSegment
                    End="-56.3333333333333,14.1426146010187" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.3333333333333,14.1426146010187"
                    Point2="-60.3333333333333,14.1426146010187"
                    Point3="-60.3333333333333,18.1426146010187" />
                  <mssgle:LineSegment
                    End="-60.3333333333333,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.1666666666667,19.1426146010187,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint 1]"
          TopLeft="251.666666666667,75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.8333333333333,41"
              Start="0,0"
              End="75.8333333333333,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5670628183362" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5670628183362"
                    Point2="0,16.5670628183362"
                    Point3="4,16.5670628183362" />
                  <mssgle:LineSegment
                    End="71.8333333333333,16.5670628183362" />
                  <mssgle:CubicBezierSegment
                    Point1="71.8333333333333,16.5670628183362"
                    Point2="75.8333333333333,16.5670628183362"
                    Point3="75.8333333333333,20.5670628183362" />
                  <mssgle:LineSegment
                    End="75.8333333333333,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="29.9166666666667,21.5670628183362,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint 2]"
          TopLeft="117.75,152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder.PrecedenceConstraints[Constraint 3]"
          TopLeft="119.5,221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.75,26"
              Start="0,0"
              End="21.75,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9"
                    Point2="0,13"
                    Point3="4,13" />
                  <mssgle:LineSegment
                    End="17.75,13" />
                  <mssgle:CubicBezierSegment
                    Point1="17.75,13"
                    Point2="21.75,13"
                    Point3="21.75,17" />
                  <mssgle:LineSegment
                    End="21.75,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="447,356"
          Size="447,399"
          Id="Package\Foreach Loop Container Read XML Files from Input folder"
          TopLeft="583.5,62.75" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="544.25,262.125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.2499999999999,0"
              Start="0,0"
              End="31.7499999999999,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.7499999999999,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="807,461.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-506,55.25"
              Start="0,0"
              End="-506,47.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.625"
                    Point2="0,27.625"
                    Point3="-4,27.625" />
                  <mssgle:LineSegment
                    End="-502,27.625" />
                  <mssgle:CubicBezierSegment
                    Point1="-502,27.625"
                    Point2="-506,27.625"
                    Point3="-506,31.625" />
                  <mssgle:LineSegment
                    End="-506,47.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="289,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Script C# reemplace punto excepto el último"
          TopLeft="260,227" />
        <NodeLayout
          Size="245,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Data Conversion strings y numerics"
          TopLeft="281,324" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source"
          TopLeft="324,3" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination"
          TopLeft="316,473" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Formateo de Str"
          TopLeft="322,144" />
        <NodeLayout
          Size="223,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Columnas derivadas sin comas"
          TopLeft="288,74" />
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Precio Calculado"
          TopLeft="328,394" />
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Excel Source Output]"
          TopLeft="396.5,45">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Derived Column Output1]"
          TopLeft="403.75,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Derived Column Output]"
          TopLeft="399.5,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Data Conversion Output]"
          TopLeft="404.75,366">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Derived Column Output2]"
          TopLeft="402,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File.Paths[Output 0]"
          TopLeft="404,269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container Read Excel Files From Input Folder\Load New Excel File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="327,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columnas Derivadas Formateo de numeros sin coma"
          TopLeft="137,82" />
        <NodeLayout
          Size="221,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversión de Precio derivado"
          TopLeft="191,370" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination"
          TopLeft="217,439" />
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Flat File Source txt"
          TopLeft="220,2" />
        <NodeLayout
          Size="332,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Conversion Columnas Derivadas sin coma a NUMERIC"
          TopLeft="131,227" />
        <NodeLayout
          Size="289,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Script C# reemplace punto excepto el último"
          TopLeft="156,154" />
        <NodeLayout
          Size="232,42"
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\Columna Derivada para el Precio"
          TopLeft="182,296" />
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Output 0]"
          TopLeft="298.75,196">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Flat File Source Output]"
          TopLeft="302,44">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Derived Column Output1]"
          TopLeft="300.5,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Derived Column Output]"
          TopLeft="299.75,338">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Data Conversion Output1]"
          TopLeft="302,412">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File.Paths[Data Conversion Output]"
          TopLeft="297.5,269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container Read Flat Files from Input Folder\Load New Flat File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\XML Source"
          TopLeft="317,86" />
        <NodeLayout
          Size="208,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Derived Columns sin comas"
          TopLeft="275,227" />
        <NodeLayout
          Size="290,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Script C# reemplace punto excepto el último"
          TopLeft="230,296" />
        <NodeLayout
          Size="244,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion fechas y numerics"
          TopLeft="257,365" />
        <NodeLayout
          Size="284,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\Data Conversion para convertir datos en str"
          TopLeft="239,158" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination"
          TopLeft="296.5,436.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Output 0]"
          TopLeft="377,338">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[NuevaFactura]"
          TopLeft="382.5,128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Derived Column Output]"
          TopLeft="377,269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Data Conversion Output1]"
          TopLeft="380.5,407">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.5"
              Start="0,0"
              End="0,22">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File.Paths[Data Conversion Output]"
          TopLeft="380,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container Read XML Files from Input folder\Load New XML File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>